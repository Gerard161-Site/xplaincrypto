2025-03-22 23:08:25,754 - socketio - INFO - received event "message" from golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,756 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:08:25,759 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:08:25,760 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,761 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,763 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:08:25,764 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:08:25,835 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:08:25,836 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,836 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,836 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,837 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,837 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:08:25,837 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:08:25,837 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:08:25,838 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:08:25,838 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,838 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,838 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,838 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,838 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,838 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:08:25,839 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:08:25,839 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,839 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,839 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:25,839 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:08:25,839 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:08:25,840 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:08:25,840 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:08:25,840 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:08:25,841 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:08:25,841 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:08:25,841 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:08:25,841 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:08:25,842 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:08:25,843 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:25,843 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:08:25,843 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:08:25,861 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:08:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:08:25,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,864 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:08:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:08:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:08:25,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:08:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:08:25,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,889 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,890 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,891 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,892 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,893 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,894 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,895 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,927 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,928 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,929 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,930 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:08:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,932 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,933 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,934 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,935 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,936 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,937 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,938 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,939 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,940 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,941 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,942 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,943 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,944 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,945 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:08:25,946 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:08:25,947 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_230825.png
2025-03-22 23:08:26,111 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_230825.png created, size: 332.1 KB
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:08:26,111 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:08:26,111 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:08:26,111 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:08:26,124 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,128 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,132 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,182 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,188 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:08:26,188 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_230826.png created, size: 82.8 KB
2025-03-22 23:08:26,188 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:08:26,188 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:08:26,188 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:08:26,189 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,189 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:08:26,189 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:08:26,300 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_230826.png created, size: 111.0 KB
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:08:26,300 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:08:26,300 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:08:26,301 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:08:26,301 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:08:26,301 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:08:26,307 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,312 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,317 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,378 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,392 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:08:26,392 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_230826.png created, size: 85.3 KB
2025-03-22 23:08:26,392 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:08:26,392 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:08:26,392 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:08:26,392 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,392 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:08:26,393 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:08:26,601 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_230826.png
2025-03-22 23:08:26,601 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:08:26,601 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_230826.png created, size: 328.2 KB
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:08:26,602 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:08:26,602 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:08:26,602 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:08:26,609 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,619 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,633 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,690 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,698 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Visualization file risks_table_20250322_230826.png created, size: 84.0 KB
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:08:26,698 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:08:26,698 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:08:26,698 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:08:26,705 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,708 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,713 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,763 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:26,771 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_230826.png created, size: 82.5 KB
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:08:26,772 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:08:26,772 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:08:26,938 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:08:26,938 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_230826.png created, size: 128.7 KB
2025-03-22 23:08:26,938 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:08:26,938 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:08:26,938 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:08:26,938 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:26,938 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:08:26,939 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:08:27,080 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:08:27,080 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_230826.png created, size: 137.6 KB
2025-03-22 23:08:27,080 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:08:27,080 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:08:27,080 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:08:27,081 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:27,081 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:08:27,081 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_230827.png
2025-03-22 23:08:27,231 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Visualization file volume_chart_20250322_230827.png created, size: 247.6 KB
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:08:27,231 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:08:27,231 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:08:27,231 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:08:27,238 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,242 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,247 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,296 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,302 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_230827.png created, size: 79.9 KB
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:08:27,302 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:08:27,302 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:08:27,311 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,316 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,323 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,374 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,382 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_230827.png created, size: 90.6 KB
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:08:27,382 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:08:27,382 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:08:27,382 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:08:27,389 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,393 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,398 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,447 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,455 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_230827.png created, size: 88.3 KB
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:08:27,455 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:08:27,455 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:08:27,455 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:08:27,462 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,466 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,470 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,517 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:08:27,523 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization file supply_table_20250322_230827.png created, size: 75.6 KB
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_230825.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_230826.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_230827.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_230827.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_230827.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_230827.png
2025-03-22 23:08:27,523 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_230827.png
2025-03-22 23:08:27,524 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:08:27,524 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:08:27,524 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,524 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,525 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,526 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,527 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,528 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,529 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,530 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,531 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,531 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,531 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,531 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,531 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,607 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,607 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,607 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,607 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,607 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,608 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,609 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,610 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,610 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,610 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,610 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,610 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:08:27,610 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:08:27,610 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:08:27,610 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,619 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,619 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,619 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:08:27,619 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:08:27,619 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:08:27,619 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:08:27,620 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:08:27,625 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:08:27,643 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:08:27,644 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:08:27,664 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117890790>
2025-03-22 23:08:27,664 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x11724e960> server_hostname='api.openai.com' timeout=None
2025-03-22 23:08:27,672 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1178906d0>
2025-03-22 23:08:27,672 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:08:27,672 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:08:27,672 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:08:27,672 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:08:27,672 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:08:33,999 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:08:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6067'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_be6e865ab76dd76f2d18b8839a206db8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=tC_iLUufztCgoWSCdA46m6PqG.m6gnl13JlRaDxAFlc-1742684914-1.0.1.1-hWRPoYzrFzbvgGW3_iFR6PWKnlPIaNdjESTl.Og_eXRTK4X58o4rWwWqln4U9F_nniQwY4lY5Y5PfHYOyPN1ECjPeuNsexB2I_d2nKBnUOw; path=/; expires=Sat, 22-Mar-25 23:38:34 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=FeV4YPWIqB_A6GzZSE.RU71PXMivJE2XN1oXfgiFEtc-1742684914077-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924959e17bce5bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:08:34,003 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:08:34,004 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:08:34,004 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:08:34,005 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:08:34,005 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:08:34,005 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:08:34 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '6067'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_be6e865ab76dd76f2d18b8839a206db8'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=tC_iLUufztCgoWSCdA46m6PqG.m6gnl13JlRaDxAFlc-1742684914-1.0.1.1-hWRPoYzrFzbvgGW3_iFR6PWKnlPIaNdjESTl.Og_eXRTK4X58o4rWwWqln4U9F_nniQwY4lY5Y5PfHYOyPN1ECjPeuNsexB2I_d2nKBnUOw; path=/; expires=Sat, 22-Mar-25 23:38:34 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=FeV4YPWIqB_A6GzZSE.RU71PXMivJE2XN1oXfgiFEtc-1742684914077-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '924959e17bce5bee-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:08:34,006 - openai._base_client - DEBUG - request_id: req_be6e865ab76dd76f2d18b8839a206db8
2025-03-22 23:08:34,028 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:08:34,031 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:08:34,031 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:08:34,032 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:08:34,032 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:08:34,032 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:08:34,032 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:08:34,032 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:08:41,616 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:08:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7430'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_d3ef9cc74a53b250646f634e20fb0e67'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495a093e945bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:08:41,618 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:08:41,618 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:08:41,626 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:08:41,627 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:08:41,627 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:08:41,627 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:08:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7430', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_d3ef9cc74a53b250646f634e20fb0e67', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495a093e945bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:08:41,627 - openai._base_client - DEBUG - request_id: req_d3ef9cc74a53b250646f634e20fb0e67
2025-03-22 23:08:41,629 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:08:41,634 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:08:41,635 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:08:41,636 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:08:41,636 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:08:41,636 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:08:41,636 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:08:41,636 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:08:50,759 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:08:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'8954'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_5de12a9ab85dc518c18f820e43119750'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495a38ccdb5bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:08:50,760 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:08:50,760 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:08:50,765 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:08:50,765 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:08:50,765 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:08:50,765 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:08:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '8954', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_5de12a9ab85dc518c18f820e43119750', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495a38ccdb5bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:08:50,765 - openai._base_client - DEBUG - request_id: req_5de12a9ab85dc518c18f820e43119750
2025-03-22 23:08:50,766 - XplainCrypto - INFO - Generated enhanced market analysis with 371 words
2025-03-22 23:08:50,766 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:08:50,767 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:08:50,768 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:08:50,768 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:08:50,768 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:08:50,768 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:08:50,768 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:08:50,768 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:08:56,191 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:08:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5267'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_56750b1b6740d7a826e9ab98778f8f6d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495a71da7d5bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:08:56,192 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:08:56,192 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:08:56,196 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:08:56,196 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:08:56,196 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:08:56,196 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:08:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5267', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_56750b1b6740d7a826e9ab98778f8f6d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495a71da7d5bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:08:56,196 - openai._base_client - DEBUG - request_id: req_56750b1b6740d7a826e9ab98778f8f6d
2025-03-22 23:08:56,197 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:08:56,200 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:08:56,201 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:08:56,201 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:08:56,201 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:08:56,201 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:08:56,202 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:08:56,202 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:09:06,910 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:09:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'10531'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999675'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_35c37f316d3e655e49a9dc4260778f0e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495a93cf985bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:09:06,911 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:09:06,911 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:09:06,918 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:09:06,918 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:09:06,918 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:09:06,918 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:09:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '10531', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999675', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_35c37f316d3e655e49a9dc4260778f0e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495a93cf985bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:09:06,918 - openai._base_client - DEBUG - request_id: req_35c37f316d3e655e49a9dc4260778f0e
2025-03-22 23:09:06,919 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:09:06,921 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:09:06,922 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:09:06,922 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:09:06,922 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:09:06,922 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:09:06,922 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:09:06,922 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:09:12,604 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:09:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5519'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_1cfc36b860d2076d6cc2146b8fbce02a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495ad6cb8a5bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:09:12,604 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:09:12,605 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:09:12,609 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:09:12,609 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:09:12,609 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:09:12,609 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:09:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5519', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_1cfc36b860d2076d6cc2146b8fbce02a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495ad6cb8a5bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:09:12,609 - openai._base_client - DEBUG - request_id: req_1cfc36b860d2076d6cc2146b8fbce02a
2025-03-22 23:09:12,609 - XplainCrypto - INFO - Generated enhanced governance section with 319 words
2025-03-22 23:09:12,609 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:09:12,611 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:09:12,612 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:09:12,612 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:09:12,613 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:09:12,613 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:09:12,613 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:09:12,613 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:09:23,605 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:09:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'10514'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_54c50269c130ea979408a4e900cb079b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495afa59835bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:09:23,606 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:09:23,606 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:09:23,612 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:09:23,612 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:09:23,612 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:09:23,612 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:09:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '10514', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_54c50269c130ea979408a4e900cb079b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495afa59835bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:09:23,613 - openai._base_client - DEBUG - request_id: req_54c50269c130ea979408a4e900cb079b
2025-03-22 23:09:23,614 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:09:23,616 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:09:23,617 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:09:23,617 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:09:23,617 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:09:23,617 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:09:23,618 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:09:23,618 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:09:34,567 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:09:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'10635'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_8f2a49fe7b44cf5899a9a935f2a077d1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495b3f2d025bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:09:34,568 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:09:34,568 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:09:34,573 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:09:34,573 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:09:34,573 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:09:34,573 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:09:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '10635', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_8f2a49fe7b44cf5899a9a935f2a077d1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495b3f2d025bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:09:34,574 - openai._base_client - DEBUG - request_id: req_8f2a49fe7b44cf5899a9a935f2a077d1
2025-03-22 23:09:34,575 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:09:34,578 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:09:34,579 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:09:34,579 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:09:34,580 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:09:34,580 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:09:34,580 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:09:34,580 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:09:40,789 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:09:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6018'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999606'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_cc145f0c534260802674a31cb78b3990'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495b83a91d5bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:09:40,790 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:09:40,790 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:09:40,793 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:09:40,793 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:09:40,793 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:09:40,793 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:09:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6018', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_cc145f0c534260802674a31cb78b3990', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495b83a91d5bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:09:40,793 - openai._base_client - DEBUG - request_id: req_cc145f0c534260802674a31cb78b3990
2025-03-22 23:09:40,793 - XplainCrypto - INFO - Generated enhanced team section with 279 words
2025-03-22 23:09:40,793 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:09:40,795 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:09:40,795 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:09:40,795 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:09:40,796 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:09:40,796 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:09:40,796 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:09:40,796 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:09:46,092 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:09:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5149'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_70cd808b8fdcfcf64975cb054a70ef79'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92495baa8e875bee-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:09:46,094 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:09:46,094 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:09:46,095 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:09:46,096 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:09:46,096 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:09:46,096 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:09:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5149', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_70cd808b8fdcfcf64975cb054a70ef79', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92495baa8e875bee-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:09:46,097 - openai._base_client - DEBUG - request_id: req_70cd808b8fdcfcf64975cb054a70ef79
2025-03-22 23:09:46,097 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:09:46,098 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:09:46,098 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,099 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,099 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,099 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,100 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,101 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,102 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,103 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:09:46,104 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:09:46,104 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:09:46,104 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,105 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,105 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,105 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,106 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:09:46,106 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:09:46,106 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:09:46,106 - XplainCrypto - WARNING - No references found, continuing without them
2025-03-22 23:09:46,106 - XplainCrypto - INFO - Using draft for report content
2025-03-22 23:09:46,111 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:09:46,112 - XplainCrypto - INFO - Building report according to style guide with report configuration
2025-03-22 23:09:46,116 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:09:46,116 - socketio - INFO - emitting event "progress" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,117 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,118 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:09:46,118 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (3659 bytes)
2025-03-22 23:09:46,118 - socketio - INFO - emitting event "data" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,119 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,119 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:09:46,119 - XplainCrypto - INFO - Report generation completed in 80.36s with 0 errors
2025-03-22 23:09:46,119 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:09:46,121 - socketio - INFO - emitting event "log_update" to golWsOKDwzBD3WKrAAAB [/]
2025-03-22 23:12:44,530 - socketio - DEBUG - Client disconnected: golWsOKDwzBD3WKrAAAB
2025-03-22 23:12:46,252 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:12:46,280 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:12:46,284 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:12:46,290 - socketio - DEBUG - Client connected: fYHABKwgRosFhp9UAAAB
2025-03-22 23:13:03,767 - socketio - DEBUG - Client disconnected: fYHABKwgRosFhp9UAAAB
2025-03-22 23:13:05,402 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:13:05,435 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:13:05,452 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:13:05,621 - socketio - DEBUG - Client connected: WdbbgXKsAVSz1rSJAAAB
2025-03-22 23:13:59,421 - socketio - DEBUG - Client disconnected: WdbbgXKsAVSz1rSJAAAB
2025-03-22 23:14:01,108 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:14:01,137 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:14:01,141 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:14:01,148 - socketio - DEBUG - Client connected: K24X8gTeIvH2H59jAAAB
2025-03-22 23:14:09,004 - socketio - INFO - received event "message" from K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,005 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:14:09,006 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:14:09,006 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,007 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,007 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:14:09,007 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:14:09,030 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:14:09,030 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,030 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,030 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,031 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,031 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:14:09,031 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:14:09,031 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:14:09,032 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:14:09,032 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,032 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,032 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,032 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,032 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,032 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:14:09,032 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:14:09,033 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,033 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,033 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:09,033 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:14:09,033 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:14:09,033 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:14:09,033 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:14:09,033 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:14:09,034 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:14:09,034 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:14:09,036 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:14:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:14:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:14:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:14:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:14:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:14:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,064 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:14:09,093 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:14:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:14:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:14:09,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:14:09,112 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:14:09,270 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_231409.png
2025-03-22 23:14:09,271 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:14:09,271 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_231409.png created, size: 333.9 KB
2025-03-22 23:14:09,271 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:14:09,271 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:14:09,271 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:14:09,271 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,272 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:14:09,272 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:14:09,419 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_231409.png
2025-03-22 23:14:09,420 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Visualization file volume_chart_20250322_231409.png created, size: 216.8 KB
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:14:09,420 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:14:09,420 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:14:09,420 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:14:09,430 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,435 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,439 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,493 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,503 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Visualization file risks_table_20250322_231409.png created, size: 84.0 KB
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:14:09,503 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:14:09,503 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:14:09,503 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:14:09,511 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,515 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,519 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,572 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:09,580 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:14:09,580 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_231409.png created, size: 85.3 KB
2025-03-22 23:14:09,580 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:14:09,580 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:14:09,580 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:14:09,581 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,581 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:14:09,581 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:14:09,742 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_231409.png
2025-03-22 23:14:09,742 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:14:09,742 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_231409.png created, size: 324.8 KB
2025-03-22 23:14:09,742 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:14:09,742 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:14:09,742 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:14:09,742 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,742 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:14:09,743 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:14:09,885 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:14:09,885 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_231409.png created, size: 137.6 KB
2025-03-22 23:14:09,885 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:14:09,885 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:14:09,885 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:14:09,885 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,885 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:14:09,885 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:14:09,996 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_231409.png created, size: 111.0 KB
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:14:09,996 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:14:09,996 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:14:10,003 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,008 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,013 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,063 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,071 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:14:10,071 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_231410.png created, size: 90.6 KB
2025-03-22 23:14:10,072 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:14:10,072 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:14:10,072 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:14:10,072 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:10,072 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:14:10,072 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:14:10,073 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:14:10,073 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:14:10,073 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:14:10,073 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:14:10,080 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,084 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,090 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,148 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,155 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:14:10,155 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_231410.png created, size: 82.9 KB
2025-03-22 23:14:10,155 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:14:10,156 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:14:10,156 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:10,156 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:14:10,156 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:14:10,156 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:14:10,156 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:14:10,360 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_231410.png created, size: 124.3 KB
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:14:10,360 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:14:10,360 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:14:10,360 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:14:10,368 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,372 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,378 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,429 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,436 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Visualization file supply_table_20250322_231410.png created, size: 74.0 KB
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:14:10,436 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:14:10,436 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:14:10,436 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:14:10,437 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:14:10,444 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,450 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,455 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,508 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,517 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_231410.png created, size: 88.3 KB
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:14:10,518 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:14:10,518 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:14:10,518 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:14:10,525 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,528 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,533 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,582 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,587 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:14:10,587 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_231410.png created, size: 82.8 KB
2025-03-22 23:14:10,587 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:14:10,587 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:14:10,587 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:14:10,588 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:14:10,588 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:14:10,588 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:14:10,588 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:14:10,588 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:14:10,588 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:14:10,594 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,598 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,602 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,652 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:14:10,659 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_231410.png created, size: 79.7 KB
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_231409.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_231410.png
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:14:10,659 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:14:10,660 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,660 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,661 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,662 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,663 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,664 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,665 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,666 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,667 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,668 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,669 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,752 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,753 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:14:10,753 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:14:10,753 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:14:10,753 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,757 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,757 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,757 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:14:10,758 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:14:10,758 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:14:10,758 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:14:10,758 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:14:10,760 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:10,783 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:10,784 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:14:10,873 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fd1c510>
2025-03-22 23:14:10,873 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10d01e960> server_hostname='api.openai.com' timeout=None
2025-03-22 23:14:10,880 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fca2110>
2025-03-22 23:14:10,881 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:10,881 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:10,881 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:10,881 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:10,881 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:14:16,624 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:14:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5360'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_6abd06c5734f92ce7d34cc29c4fa64ea'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=6b_ga60VuD3eVGg4GrCEtQT8xzxUoSL7Pz063kTm0NM-1742685256-1.0.1.1-_bLitZruAQa0or9QlocSHTc2m9_RB.XB.Q5IYwkKhkEbdrddcNkCH3PMZO9fU28UuZIHZ1gpgcyIFgMA1YfgXkeI.NQjOmninhN08wMoa_8; path=/; expires=Sat, 22-Mar-25 23:44:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=7lPSltViGs9HunNv4.aihock8iMY6I2yr.jq4zL.AGY-1742685256708-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924962428a7a5be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:14:16,626 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:14:16,626 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:14:16,631 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:14:16,632 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:14:16,632 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:14:16,632 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:14:16 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '5360'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_6abd06c5734f92ce7d34cc29c4fa64ea'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=6b_ga60VuD3eVGg4GrCEtQT8xzxUoSL7Pz063kTm0NM-1742685256-1.0.1.1-_bLitZruAQa0or9QlocSHTc2m9_RB.XB.Q5IYwkKhkEbdrddcNkCH3PMZO9fU28UuZIHZ1gpgcyIFgMA1YfgXkeI.NQjOmninhN08wMoa_8; path=/; expires=Sat, 22-Mar-25 23:44:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=7lPSltViGs9HunNv4.aihock8iMY6I2yr.jq4zL.AGY-1742685256708-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '924962428a7a5be6-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:14:16,632 - openai._base_client - DEBUG - request_id: req_6abd06c5734f92ce7d34cc29c4fa64ea
2025-03-22 23:14:16,640 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:14:16,641 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:16,642 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:16,642 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:16,642 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:16,642 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:16,642 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:16,642 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:14:21,991 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:14:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5184'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_4252f6c6d298e43ed1a88e558e8fb9b7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924962668e395be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:14:21,992 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:14:21,992 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:14:21,994 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:14:21,995 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:14:21,995 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:14:21,995 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:14:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5184', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_4252f6c6d298e43ed1a88e558e8fb9b7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924962668e395be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:14:21,995 - openai._base_client - DEBUG - request_id: req_4252f6c6d298e43ed1a88e558e8fb9b7
2025-03-22 23:14:21,995 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:14:21,997 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:21,998 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:21,998 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:21,998 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:21,998 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:21,999 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:21,999 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:14:33,391 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:14:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'11171'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_da7656af6e48347900203d9b9dde3190'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924962880cd65be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:14:33,392 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:14:33,392 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:14:33,394 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:14:33,394 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:14:33,394 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:14:33,394 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:14:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '11171', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_da7656af6e48347900203d9b9dde3190', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924962880cd65be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:14:33,394 - openai._base_client - DEBUG - request_id: req_da7656af6e48347900203d9b9dde3190
2025-03-22 23:14:33,395 - XplainCrypto - INFO - Generated enhanced market analysis with 360 words
2025-03-22 23:14:33,395 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:14:33,396 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:33,397 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:33,397 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:33,397 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:33,397 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:33,397 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:33,397 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:14:39,492 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:14:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5938'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_cf5bbb8f6d3c99da53dac28041a5083b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924962cf48a45be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:14:39,493 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:14:39,493 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:14:39,503 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:14:39,503 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:14:39,503 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:14:39,503 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:14:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5938', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_cf5bbb8f6d3c99da53dac28041a5083b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924962cf48a45be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:14:39,503 - openai._base_client - DEBUG - request_id: req_cf5bbb8f6d3c99da53dac28041a5083b
2025-03-22 23:14:39,504 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:14:39,507 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:39,508 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:39,508 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:39,508 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:39,508 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:39,508 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:39,508 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:14:51,280 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:14:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'11572'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999675'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_52c5cec8641c31100351ffb3ef87a173'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924962f57a235be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:14:51,281 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:14:51,281 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:14:51,285 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:14:51,285 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:14:51,285 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:14:51,285 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:14:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '11572', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999675', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_52c5cec8641c31100351ffb3ef87a173', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924962f57a235be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:14:51,285 - openai._base_client - DEBUG - request_id: req_52c5cec8641c31100351ffb3ef87a173
2025-03-22 23:14:51,285 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:14:51,287 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:51,287 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:51,287 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:51,288 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:51,288 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:51,288 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:51,288 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:14:56,067 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:14:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4556'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_e479f49c09a7b7cbd8bca6dc29656839'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249633f19065be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:14:56,068 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:14:56,068 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:14:56,069 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:14:56,069 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:14:56,069 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:14:56,069 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:14:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4556', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_e479f49c09a7b7cbd8bca6dc29656839', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249633f19065be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:14:56,069 - openai._base_client - DEBUG - request_id: req_e479f49c09a7b7cbd8bca6dc29656839
2025-03-22 23:14:56,070 - XplainCrypto - INFO - Generated enhanced governance section with 300 words
2025-03-22 23:14:56,070 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:14:56,074 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:14:56,075 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:14:56,075 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:14:56,076 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:14:56,076 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:14:56,076 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:14:56,076 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:15:02,608 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:15:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6381'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_4fcd24b0f54146f22580e958d61fcda6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249635d08d95be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:15:02,609 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:15:02,609 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:15:02,613 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:15:02,613 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:15:02,613 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:15:02,613 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:15:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6381', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_4fcd24b0f54146f22580e958d61fcda6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249635d08d95be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:15:02,613 - openai._base_client - DEBUG - request_id: req_4fcd24b0f54146f22580e958d61fcda6
2025-03-22 23:15:02,613 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:15:02,615 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:15:02,615 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:15:02,615 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:15:02,616 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:15:02,616 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:15:02,616 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:15:02,616 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:15:09,329 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:15:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6543'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_e34c9c8c08eb75249f4252f5c8cf8151'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496385e9225be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:15:09,330 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:15:09,330 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:15:09,332 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:15:09,333 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:15:09,333 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:15:09,333 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:15:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6543', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_e34c9c8c08eb75249f4252f5c8cf8151', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496385e9225be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:15:09,333 - openai._base_client - DEBUG - request_id: req_e34c9c8c08eb75249f4252f5c8cf8151
2025-03-22 23:15:09,334 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:15:09,337 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:15:09,338 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:15:09,338 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:15:09,339 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:15:09,339 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:15:09,339 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:15:09,339 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:15:14,906 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:15:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5418'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999606'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_458b104c32a20b1c6858d716aa3882c0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924963afe8e45be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:15:14,906 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:15:14,906 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:15:14,908 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:15:14,908 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:15:14,908 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:15:14,908 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:15:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5418', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_458b104c32a20b1c6858d716aa3882c0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924963afe8e45be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:15:14,908 - openai._base_client - DEBUG - request_id: req_458b104c32a20b1c6858d716aa3882c0
2025-03-22 23:15:14,909 - XplainCrypto - INFO - Generated enhanced team section with 299 words
2025-03-22 23:15:14,909 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:15:14,910 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:15:14,910 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:15:14,911 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:15:14,911 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:15:14,911 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:15:14,911 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:15:14,911 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:15:19,280 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:15:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4138'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_dac44c728f727afb916f49277aefe2ad'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924963d2cec95be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:15:19,281 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:15:19,281 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:15:19,282 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:15:19,282 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:15:19,282 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:15:19,282 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:15:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4138', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_dac44c728f727afb916f49277aefe2ad', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924963d2cec95be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:15:19,282 - openai._base_client - DEBUG - request_id: req_dac44c728f727afb916f49277aefe2ad
2025-03-22 23:15:19,283 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:15:19,283 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:15:19,283 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,284 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,285 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:15:19,285 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:15:19,285 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:15:19,285 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,285 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,285 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,285 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,285 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:15:19,285 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:15:19,286 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:15:19,286 - XplainCrypto - WARNING - No references found, continuing without them
2025-03-22 23:15:19,286 - XplainCrypto - INFO - Using draft for report content
2025-03-22 23:15:19,292 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:15:19,294 - XplainCrypto - INFO - Building report according to style guide with report configuration
2025-03-22 23:15:19,300 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:15:19,300 - socketio - INFO - emitting event "progress" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,300 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,300 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,301 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:15:19,301 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (3659 bytes)
2025-03-22 23:15:19,302 - socketio - INFO - emitting event "data" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,302 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,302 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:15:19,303 - XplainCrypto - INFO - Report generation completed in 70.3s with 0 errors
2025-03-22 23:15:19,303 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:15:19,303 - socketio - INFO - emitting event "log_update" to K24X8gTeIvH2H59jAAAB [/]
2025-03-22 23:17:09,989 - socketio - DEBUG - Client disconnected: K24X8gTeIvH2H59jAAAB
2025-03-22 23:17:11,862 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:17:11,891 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:17:11,896 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:17:11,904 - socketio - DEBUG - Client connected: Yn1664MD8IgzmeRzAAAB
2025-03-22 23:17:25,459 - socketio - DEBUG - Client disconnected: Yn1664MD8IgzmeRzAAAB
2025-03-22 23:17:27,417 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:17:27,448 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:17:27,452 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:17:27,461 - socketio - DEBUG - Client connected: KYPiB8cuVMO4n5EZAAAB
2025-03-22 23:20:08,922 - socketio - INFO - received event "message" from KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,927 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:20:08,929 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:20:08,930 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,931 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,936 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:20:08,936 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:20:08,994 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:20:08,994 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,994 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,995 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,995 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,996 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:20:08,996 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:20:08,997 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:20:08,998 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:20:08,998 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,999 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,999 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,999 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:08,999 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:09,000 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:20:09,000 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:20:09,000 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:09,001 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:09,001 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:09,002 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:20:09,002 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:20:09,002 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:20:09,002 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:20:09,003 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:20:09,003 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:20:09,004 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:20:09,004 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:20:09,004 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:20:09,004 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,004 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:20:09,005 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:20:09,005 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:20:09,005 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:20:09,005 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:20:09,005 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:20:09,033 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,035 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,036 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,037 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,038 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:20:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,039 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,040 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,041 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,042 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,043 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:20:09,044 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,045 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:20:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,046 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,047 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,048 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:20:09,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,067 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,068 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:20:09,079 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,082 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,083 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,084 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,085 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,086 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,087 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,088 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,089 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,090 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,091 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:20:09,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:20:09,101 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:20:09,108 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,114 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,177 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,183 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_232009.png created, size: 81.4 KB
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:20:09,183 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:20:09,183 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:20:09,184 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:20:09,184 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:20:09,191 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,195 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,200 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,251 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,258 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:20:09,258 - XplainCrypto - INFO - Visualization file supply_table_20250322_232009.png created, size: 74.3 KB
2025-03-22 23:20:09,258 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:20:09,258 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:20:09,258 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:20:09,258 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,258 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:20:09,258 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:20:09,407 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:20:09,407 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_232009.png created, size: 137.6 KB
2025-03-22 23:20:09,407 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:20:09,407 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:20:09,407 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,407 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:20:09,408 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:20:09,408 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:20:09,408 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:20:09,408 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:20:09,408 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:20:09,414 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,418 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,422 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,473 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,480 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:20:09,480 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_232009.png created, size: 79.1 KB
2025-03-22 23:20:09,480 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:20:09,480 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:20:09,480 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:20:09,480 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,480 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:20:09,480 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:20:09,645 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_232009.png
2025-03-22 23:20:09,645 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:20:09,645 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_232009.png created, size: 344.9 KB
2025-03-22 23:20:09,645 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:20:09,645 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:20:09,645 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,645 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:20:09,645 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:20:09,646 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:20:09,646 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:20:09,813 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:20:09,813 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_232009.png created, size: 118.9 KB
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:20:09,814 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:20:09,814 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:20:09,814 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:20:09,821 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,826 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,831 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,882 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,890 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_232009.png created, size: 88.3 KB
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:20:09,891 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:20:09,891 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:20:09,891 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:20:09,901 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,906 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,911 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,966 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:09,974 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:20:09,974 - XplainCrypto - INFO - Visualization file risks_table_20250322_232009.png created, size: 84.0 KB
2025-03-22 23:20:09,974 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:20:09,974 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:20:09,974 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:20:09,974 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:09,974 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:20:09,974 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:20:10,083 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:20:10,083 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_232009.png created, size: 111.0 KB
2025-03-22 23:20:10,083 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:20:10,083 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:20:10,083 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:20:10,083 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:10,083 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:20:10,083 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:20:10,242 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_232010.png
2025-03-22 23:20:10,242 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:20:10,242 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_232010.png created, size: 354.7 KB
2025-03-22 23:20:10,242 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:20:10,242 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:20:10,243 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:20:10,243 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:20:10,249 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,253 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,258 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,307 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,313 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:20:10,313 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_232010.png created, size: 82.1 KB
2025-03-22 23:20:10,313 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:20:10,314 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:20:10,314 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:20:10,320 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,325 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,330 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,385 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,396 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:20:10,396 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_232010.png created, size: 90.6 KB
2025-03-22 23:20:10,396 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:20:10,397 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:20:10,397 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:20:10,397 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:10,397 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:20:10,397 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:20:10,561 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_232010.png
2025-03-22 23:20:10,561 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:20:10,561 - XplainCrypto - INFO - Visualization file volume_chart_20250322_232010.png created, size: 243.8 KB
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:20:10,562 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:20:10,562 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:20:10,562 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:20:10,569 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,575 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,581 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,656 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:20:10,665 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_232010.png created, size: 85.3 KB
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_232009.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_232010.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_232010.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_232010.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_232010.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_232010.png
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:20:10,666 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:20:10,666 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,667 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,668 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,669 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,670 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,671 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,672 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,672 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,672 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,672 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,672 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,672 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,674 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,675 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,676 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,677 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:20:10,677 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:20:10,677 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:20:10,677 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,683 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,683 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,684 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:20:10,684 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:20:10,684 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:20:10,684 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:20:10,684 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:20:10,689 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:10,714 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:10,714 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:20:10,810 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12ec53090>
2025-03-22 23:20:10,810 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c222840> server_hostname='api.openai.com' timeout=None
2025-03-22 23:20:10,818 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10ec94e50>
2025-03-22 23:20:10,818 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:10,818 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:10,818 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:10,818 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:10,818 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:16,275 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5228'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_92373ba4a4ac03ee7af997cb64b48caa'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=A4LfS1PskcjCnTPRf6LkiyzQ2I.sSHyQGj8WTKH1aDM-1742685616-1.0.1.1-Gy_7SwaOGkb2yY4sQJ_MT9jD5ore1J5WsmGB.HI5vsjJvbSuxXqDEb9.22z6HBp.q7UaJ3zlO6q6NcBm6itwkH.dDVNtfYw1sZeMfXVSTUU; path=/; expires=Sat, 22-Mar-25 23:50:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=vTktxtVlAQzfl4L7q.wlfI5QRCQYCQFfotWZqCsBl9E-1742685616361-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496b0c2d605be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:16,275 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:16,276 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:16,280 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:16,280 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:16,280 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:16,280 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:20:16 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '5228'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_92373ba4a4ac03ee7af997cb64b48caa'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=A4LfS1PskcjCnTPRf6LkiyzQ2I.sSHyQGj8WTKH1aDM-1742685616-1.0.1.1-Gy_7SwaOGkb2yY4sQJ_MT9jD5ore1J5WsmGB.HI5vsjJvbSuxXqDEb9.22z6HBp.q7UaJ3zlO6q6NcBm6itwkH.dDVNtfYw1sZeMfXVSTUU; path=/; expires=Sat, 22-Mar-25 23:50:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=vTktxtVlAQzfl4L7q.wlfI5QRCQYCQFfotWZqCsBl9E-1742685616361-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92496b0c2d605be6-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:20:16,280 - openai._base_client - DEBUG - request_id: req_92373ba4a4ac03ee7af997cb64b48caa
2025-03-22 23:20:16,289 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:20:16,293 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:16,294 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:16,294 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:16,294 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:16,294 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:16,294 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:16,294 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:20,407 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3948'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_e0e87f9648f5315e653ec130deae1f2a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496b2e6ca35be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:20,407 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:20,407 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:20,410 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:20,410 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:20,410 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:20,411 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:20:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '3948', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_e0e87f9648f5315e653ec130deae1f2a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496b2e6ca35be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:20:20,411 - openai._base_client - DEBUG - request_id: req_e0e87f9648f5315e653ec130deae1f2a
2025-03-22 23:20:20,411 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:20:20,414 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:20,414 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:20,414 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:20,414 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:20,414 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:20,414 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:20,415 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:28,335 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7755'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_241896652eb06a9af70129dc6ea08792'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496b482f355be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:28,336 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:28,337 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:28,337 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:28,337 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:28,337 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:28,337 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:20:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7755', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_241896652eb06a9af70129dc6ea08792', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496b482f355be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:20:28,337 - openai._base_client - DEBUG - request_id: req_241896652eb06a9af70129dc6ea08792
2025-03-22 23:20:28,337 - XplainCrypto - INFO - Generated enhanced market analysis with 368 words
2025-03-22 23:20:28,338 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:20:28,339 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:28,340 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:28,340 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:28,340 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:28,340 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:28,340 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:28,340 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:33,678 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5085'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_123abc71b4b1b0bd89f2f86bfbcb0ca6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496b79bdc95be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:33,679 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:33,679 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:33,679 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:33,679 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:33,680 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:33,680 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:20:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5085', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_123abc71b4b1b0bd89f2f86bfbcb0ca6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496b79bdc95be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:20:33,680 - openai._base_client - DEBUG - request_id: req_123abc71b4b1b0bd89f2f86bfbcb0ca6
2025-03-22 23:20:33,681 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:20:33,683 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:33,683 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:33,684 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:33,684 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:33,684 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:33,684 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:33,684 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:40,518 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6682'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999675'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_f753b1845605c6c7d14ef83e16572c41'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496b9b1b945be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:40,519 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:40,519 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:40,520 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:40,520 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:40,520 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:40,520 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:20:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6682', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999675', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_f753b1845605c6c7d14ef83e16572c41', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496b9b1b945be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:20:40,520 - openai._base_client - DEBUG - request_id: req_f753b1845605c6c7d14ef83e16572c41
2025-03-22 23:20:40,521 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:20:40,524 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:40,525 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:40,525 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:40,525 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:40,525 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:40,525 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:40,525 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:45,140 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4447'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_23b4e8585bd1101ef940d1bd5cb37762'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496bc5dbcf5be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:45,140 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:45,140 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:45,140 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:45,140 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:45,140 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:45,141 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:20:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4447', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_23b4e8585bd1101ef940d1bd5cb37762', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496bc5dbcf5be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:20:45,141 - openai._base_client - DEBUG - request_id: req_23b4e8585bd1101ef940d1bd5cb37762
2025-03-22 23:20:45,141 - XplainCrypto - INFO - Generated enhanced governance section with 308 words
2025-03-22 23:20:45,141 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:20:45,143 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:45,143 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:45,143 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:45,143 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:45,143 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:45,143 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:45,143 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:20:57,576 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:20:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'12253'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_4019525f46d646c14a18e0a0d86da2f3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496be2bc135be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:20:57,584 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:20:57,584 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:20:57,585 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:20:57,586 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:20:57,586 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:20:57,586 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:20:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '12253', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_4019525f46d646c14a18e0a0d86da2f3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496be2bc135be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:20:57,586 - openai._base_client - DEBUG - request_id: req_4019525f46d646c14a18e0a0d86da2f3
2025-03-22 23:20:57,588 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:20:57,593 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:20:57,594 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:20:57,594 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:20:57,594 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:20:57,594 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:20:57,594 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:20:57,594 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:21:04,191 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:21:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6398'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_a32a31a6b2fbffb61d55ada4df65b195'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496c308a3e5be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:21:04,192 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:21:04,192 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:21:04,200 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:21:04,200 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:21:04,200 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:21:04,200 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:21:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6398', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_a32a31a6b2fbffb61d55ada4df65b195', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496c308a3e5be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:21:04,200 - openai._base_client - DEBUG - request_id: req_a32a31a6b2fbffb61d55ada4df65b195
2025-03-22 23:21:04,201 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:21:04,202 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:21:04,202 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:21:04,202 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:21:04,203 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:21:04,203 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:21:04,203 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:21:04,203 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:21:09,861 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:21:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5507'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999606'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_662e19b68a3e4afe63f067701d4b0b75'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496c59dc875be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:21:09,863 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:21:09,863 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:21:09,865 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:21:09,865 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:21:09,865 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:21:09,865 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:21:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5507', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_662e19b68a3e4afe63f067701d4b0b75', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496c59dc875be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:21:09,865 - openai._base_client - DEBUG - request_id: req_662e19b68a3e4afe63f067701d4b0b75
2025-03-22 23:21:09,868 - XplainCrypto - INFO - Generated enhanced team section with 252 words
2025-03-22 23:21:09,868 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:21:09,872 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:21:09,873 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:21:09,873 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:21:09,874 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:21:09,874 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:21:09,874 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:21:09,874 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:21:13,481 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:21:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3418'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_1790b22f7db6261af26deb48d7a21ec4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92496c7d4dcb5be6-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:21:13,482 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:21:13,482 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:21:13,502 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:21:13,502 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:21:13,502 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:21:13,502 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:21:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '3418', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_1790b22f7db6261af26deb48d7a21ec4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92496c7d4dcb5be6-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:21:13,502 - openai._base_client - DEBUG - request_id: req_1790b22f7db6261af26deb48d7a21ec4
2025-03-22 23:21:13,503 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:21:13,503 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:21:13,503 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,504 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,505 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:21:13,505 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:21:13,505 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:21:13,505 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,506 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,506 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,506 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,506 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:21:13,507 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:21:13,507 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:21:13,507 - XplainCrypto - WARNING - No references found, continuing without them
2025-03-22 23:21:13,507 - XplainCrypto - INFO - Using draft for report content
2025-03-22 23:21:13,514 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:21:13,515 - XplainCrypto - INFO - Building report according to style guide with report configuration
2025-03-22 23:21:13,520 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "progress" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,520 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,521 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,521 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,521 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:21:13,521 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (3659 bytes)
2025-03-22 23:21:13,521 - socketio - INFO - emitting event "data" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,522 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,522 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:21:13,523 - XplainCrypto - INFO - Report generation completed in 64.59s with 0 errors
2025-03-22 23:21:13,524 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:21:13,526 - socketio - INFO - emitting event "log_update" to KYPiB8cuVMO4n5EZAAAB [/]
2025-03-22 23:22:21,118 - socketio - DEBUG - Client disconnected: KYPiB8cuVMO4n5EZAAAB
2025-03-22 23:22:22,853 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:22:22,882 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:22:22,887 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:22:22,894 - socketio - DEBUG - Client connected: ZiYfaPXaXNsHIaqMAAAB
2025-03-22 23:24:38,295 - socketio - DEBUG - Client disconnected: ZiYfaPXaXNsHIaqMAAAB
2025-03-22 23:24:39,958 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:24:39,990 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:24:39,995 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:24:40,003 - socketio - DEBUG - Client connected: eiV-Rovb0r1NL1A6AAAB
2025-03-22 23:24:53,743 - socketio - DEBUG - Client disconnected: eiV-Rovb0r1NL1A6AAAB
2025-03-22 23:24:55,385 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:24:55,416 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:24:55,421 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:24:55,428 - socketio - DEBUG - Client connected: bG6YOXPXQZ6ESobGAAAB
2025-03-22 23:25:22,337 - socketio - DEBUG - Client disconnected: bG6YOXPXQZ6ESobGAAAB
2025-03-22 23:25:24,079 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:25:24,108 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:25:24,113 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:25:24,117 - socketio - DEBUG - Client connected: _4-N33TQClHaCqrvAAAB
2025-03-22 23:25:24,215 - socketio - DEBUG - Client disconnected: _4-N33TQClHaCqrvAAAB
2025-03-22 23:25:25,482 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:25:25,503 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:25:25,507 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:25:25,621 - socketio - DEBUG - Client connected: drJKtLCZqtU0e0toAAAB
2025-03-22 23:25:47,074 - socketio - DEBUG - Client disconnected: drJKtLCZqtU0e0toAAAB
2025-03-22 23:25:48,744 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:25:48,772 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:25:48,777 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:25:48,782 - socketio - DEBUG - Client connected: E-Djb-fZ4SSImSLdAAAB
2025-03-22 23:26:09,565 - socketio - DEBUG - Client disconnected: E-Djb-fZ4SSImSLdAAAB
2025-03-22 23:26:11,260 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:26:11,288 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:26:11,293 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:26:11,630 - socketio - DEBUG - Client connected: ytQCeOpo-ZGl3aPFAAAB
2025-03-22 23:26:16,548 - socketio - DEBUG - Client disconnected: ytQCeOpo-ZGl3aPFAAAB
2025-03-22 23:26:18,179 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:26:18,208 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:26:18,212 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:26:18,615 - socketio - DEBUG - Client connected: WkkS5puGr2mVXcjxAAAB
2025-03-22 23:26:36,036 - socketio - DEBUG - Client disconnected: WkkS5puGr2mVXcjxAAAB
2025-03-22 23:26:37,914 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:26:37,946 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:26:37,951 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:26:37,960 - socketio - DEBUG - Client connected: 2GD8Z0Nemkfx1tDhAAAB
2025-03-22 23:26:49,790 - socketio - DEBUG - Client disconnected: 2GD8Z0Nemkfx1tDhAAAB
2025-03-22 23:26:51,468 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:26:51,496 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:26:51,500 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:26:51,507 - socketio - DEBUG - Client connected: vutmA6XumZVJSNH-AAAB
2025-03-22 23:27:01,629 - socketio - DEBUG - Client disconnected: vutmA6XumZVJSNH-AAAB
2025-03-22 23:27:03,436 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:27:03,475 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:27:03,480 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:27:03,617 - socketio - DEBUG - Client connected: sQyeVlo4CUQ-ecFqAAAB
2025-03-22 23:28:26,736 - socketio - DEBUG - Client disconnected: sQyeVlo4CUQ-ecFqAAAB
2025-03-22 23:28:28,569 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:28:28,599 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:28:28,605 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:28:28,610 - socketio - DEBUG - Client connected: ws-LWt_UHdcRzZ5eAAAB
2025-03-22 23:28:40,337 - socketio - DEBUG - Client disconnected: ws-LWt_UHdcRzZ5eAAAB
2025-03-22 23:28:42,442 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:28:42,479 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:28:42,487 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:28:42,499 - socketio - DEBUG - Client connected: BjggsQ7y91z885jbAAAB
2025-03-22 23:29:24,287 - socketio - INFO - received event "message" from BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,288 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:29:24,289 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:29:24,289 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,289 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,289 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:29:24,289 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:29:24,349 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:29:24,349 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,349 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,350 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,350 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,350 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:29:24,351 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:29:24,351 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:29:24,352 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:29:24,352 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,353 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,353 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,354 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,354 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,354 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:29:24,354 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:29:24,354 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,354 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,354 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:24,354 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:29:24,355 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:29:24,356 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:29:24,356 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:24,356 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:29:24,356 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:29:24,356 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:29:24,356 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:29:24,356 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:29:24,356 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:29:24,366 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:29:24,371 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:29:24,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,372 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,373 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,374 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,375 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,376 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,377 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:29:24,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:29:24,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,378 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,379 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:29:24,380 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,381 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,382 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:29:24,383 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:29:24,384 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,385 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:29:24,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,386 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,388 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:29:24,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:29:24,389 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,390 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,391 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,392 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,393 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,396 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,397 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,398 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,399 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,400 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,402 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,403 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,404 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,405 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,406 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,407 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,408 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,409 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,410 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,411 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,412 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,413 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:29:24,414 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,415 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,416 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:29:24,429 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,433 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:29:24,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,434 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,435 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:29:24,435 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,436 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,437 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,438 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:29:24,439 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,440 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,441 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,442 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:29:24,443 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,444 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,445 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:29:24,446 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,447 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,448 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,449 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,450 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,451 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,452 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,453 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,455 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,456 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,457 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,458 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,459 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,460 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,461 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,462 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,463 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:29:24,464 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:29:24,472 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,479 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,546 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,554 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_232924.png created, size: 77.6 KB
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:29:24,555 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:29:24,555 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:29:24,556 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:29:24,556 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:29:24,565 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,573 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,578 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,634 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,643 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Visualization file risks_table_20250322_232924.png created, size: 84.0 KB
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:29:24,643 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:29:24,643 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:29:24,643 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:29:24,650 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,657 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,662 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,727 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:24,736 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:29:24,736 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_232924.png created, size: 85.3 KB
2025-03-22 23:29:24,736 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:29:24,736 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:29:24,736 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:29:24,736 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:24,736 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:29:24,736 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:29:24,907 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_232924.png
2025-03-22 23:29:24,907 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:29:24,908 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_232924.png created, size: 349.8 KB
2025-03-22 23:29:24,908 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:29:24,908 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:29:24,908 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:29:24,908 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:24,908 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:29:24,908 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:29:25,054 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_232924.png created, size: 137.6 KB
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:29:25,054 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:29:25,054 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:29:25,062 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,066 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,072 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,124 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,132 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_232925.png created, size: 90.6 KB
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:29:25,132 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:29:25,132 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:29:25,132 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:29:25,140 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,144 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,149 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,198 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,205 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:29:25,205 - XplainCrypto - INFO - Visualization file supply_table_20250322_232925.png created, size: 75.3 KB
2025-03-22 23:29:25,205 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:29:25,205 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:29:25,205 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:29:25,205 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,205 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:29:25,205 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:29:25,359 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_232925.png
2025-03-22 23:29:25,360 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_232925.png created, size: 334.2 KB
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:29:25,360 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:29:25,360 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:29:25,360 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:29:25,367 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,371 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,375 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,423 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,428 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:29:25,428 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_232925.png created, size: 82.7 KB
2025-03-22 23:29:25,428 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:29:25,428 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:29:25,429 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,429 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:29:25,429 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:29:25,429 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:29:25,429 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:29:25,429 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:29:25,429 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:29:25,436 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,440 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,446 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,502 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,510 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_232925.png created, size: 81.7 KB
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:29:25,511 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:29:25,511 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:29:25,672 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_232925.png created, size: 120.9 KB
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:29:25,672 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:29:25,672 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:29:25,673 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:29:25,673 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:29:25,679 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,684 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,690 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,740 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:29:25,748 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:29:25,748 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_232925.png created, size: 88.3 KB
2025-03-22 23:29:25,748 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:29:25,748 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:29:25,748 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:29:25,748 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,748 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:29:25,748 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_232925.png
2025-03-22 23:29:25,899 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Visualization file volume_chart_20250322_232925.png created, size: 237.2 KB
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:29:25,899 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:29:25,899 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:29:26,008 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_232925.png created, size: 111.0 KB
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_232924.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_232924.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_232924.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_232924.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_232924.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_232925.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_232925.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_232925.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_232925.png
2025-03-22 23:29:26,008 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_232925.png
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_232925.png
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_232925.png
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_232925.png
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_232925.png
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:29:26,009 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:29:26,009 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,009 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,010 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,011 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,012 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,013 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,014 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,015 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,015 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,015 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,015 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,016 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,017 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,079 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,080 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,081 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:29:26,081 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:29:26,082 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:29:26,082 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,083 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,083 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,083 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:29:26,083 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:29:26,084 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:29:26,084 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:29:26,084 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:29:26,086 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:29:26,103 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:29:26,103 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:29:26,204 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1231a6890>
2025-03-22 23:29:26,204 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x12061e9f0> server_hostname='api.openai.com' timeout=None
2025-03-22 23:29:26,212 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12328f050>
2025-03-22 23:29:26,212 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:29:26,212 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:29:26,212 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:29:26,212 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:29:26,212 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:29:30,218 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:29:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3532'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_c85199f20dde1e2452245288c161b8df'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Zem2a9YQ_TS5Nw_J9YqlcNUfbU34FxLKd4lZenIhESw-1742686170-1.0.1.1-iDfglajA8HyXoKshfhl8P5jzfmsc8iyWDtS3aOsnP2GtVbse5_UJfyIUCepYAUkisOKjvsiZgywo8xR70PWs50uQ1_ThZRMq99Psf7YpYm0; path=/; expires=Sat, 22-Mar-25 23:59:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=QdTXs74Zk3iMWuFTm3PCZbZyYcL6DUKFsikRDqNqiq4-1742686170314-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249789b7f1f5be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:29:30,220 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:29:30,220 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:29:30,221 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:29:30,221 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:29:30,221 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:29:30,221 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:29:30 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '3532'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_c85199f20dde1e2452245288c161b8df'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Zem2a9YQ_TS5Nw_J9YqlcNUfbU34FxLKd4lZenIhESw-1742686170-1.0.1.1-iDfglajA8HyXoKshfhl8P5jzfmsc8iyWDtS3aOsnP2GtVbse5_UJfyIUCepYAUkisOKjvsiZgywo8xR70PWs50uQ1_ThZRMq99Psf7YpYm0; path=/; expires=Sat, 22-Mar-25 23:59:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=QdTXs74Zk3iMWuFTm3PCZbZyYcL6DUKFsikRDqNqiq4-1742686170314-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9249789b7f1f5be0-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:29:30,221 - openai._base_client - DEBUG - request_id: req_c85199f20dde1e2452245288c161b8df
2025-03-22 23:29:30,229 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:29:30,230 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:29:30,231 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:29:30,231 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:29:30,231 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:29:30,231 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:29:30,231 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:29:30,231 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:29:34,946 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:29:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4542'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_3350c533664341b7660862efbf998399'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924978b499455be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:29:34,947 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:29:34,947 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:29:34,947 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:29:34,947 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:29:34,947 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:29:34,947 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:29:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4542', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_3350c533664341b7660862efbf998399', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924978b499455be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:29:34,948 - openai._base_client - DEBUG - request_id: req_3350c533664341b7660862efbf998399
2025-03-22 23:29:34,948 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:29:34,950 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:29:34,951 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:29:34,952 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:29:34,952 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:29:34,952 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:29:34,952 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:29:34,953 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:29:42,199 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:29:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7086'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_8ad0e1984416dc3da3decc025b95587a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924978d21e745be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:29:42,200 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:29:42,200 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:29:42,200 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:29:42,200 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:29:42,200 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:29:42,200 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:29:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7086', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_8ad0e1984416dc3da3decc025b95587a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924978d21e745be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:29:42,200 - openai._base_client - DEBUG - request_id: req_8ad0e1984416dc3da3decc025b95587a
2025-03-22 23:29:42,201 - XplainCrypto - INFO - Generated enhanced market analysis with 363 words
2025-03-22 23:29:42,201 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:29:42,202 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:29:42,203 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:29:42,203 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:29:42,203 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:29:42,203 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:29:42,203 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:29:42,203 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:29:48,419 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:29:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6057'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_ee1a0ab67c86f82f9ae4fd78f1bd44b9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924978ff6a385be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:29:48,420 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:29:48,420 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:29:48,424 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:29:48,424 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:29:48,425 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:29:48,425 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:29:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6057', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_ee1a0ab67c86f82f9ae4fd78f1bd44b9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924978ff6a385be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:29:48,425 - openai._base_client - DEBUG - request_id: req_ee1a0ab67c86f82f9ae4fd78f1bd44b9
2025-03-22 23:29:48,426 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:29:48,429 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:29:48,429 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:29:48,430 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:29:48,430 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:29:48,430 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:29:48,430 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:29:48,430 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:29:58,515 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:29:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'9909'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999675'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_3e03b57a4dd6e5e223aca8a41218b7d3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924979265e2f5be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:29:58,516 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:29:58,516 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:29:58,521 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:29:58,521 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:29:58,521 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:29:58,522 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:29:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '9909', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999675', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_3e03b57a4dd6e5e223aca8a41218b7d3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924979265e2f5be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:29:58,522 - openai._base_client - DEBUG - request_id: req_3e03b57a4dd6e5e223aca8a41218b7d3
2025-03-22 23:29:58,522 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:29:58,525 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:29:58,525 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:29:58,525 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:29:58,525 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:29:58,525 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:29:58,525 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:29:58,525 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:30:04,468 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:30:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5711'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_ac8758f8c2f5a5ecdfbaa89804b6e031'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249796568975be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:30:04,468 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:30:04,469 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:30:04,479 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:30:04,479 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:30:04,479 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:30:04,479 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:30:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5711', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_ac8758f8c2f5a5ecdfbaa89804b6e031', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249796568975be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:30:04,479 - openai._base_client - DEBUG - request_id: req_ac8758f8c2f5a5ecdfbaa89804b6e031
2025-03-22 23:30:04,480 - XplainCrypto - INFO - Generated enhanced governance section with 339 words
2025-03-22 23:30:04,480 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:30:04,481 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:30:04,481 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:30:04,482 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:30:04,482 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:30:04,482 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:30:04,482 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:30:04,482 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:30:13,719 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:30:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'9090'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_d8f680cdfe0284e2efbe6477a6dffdd9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249798aaa235be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:30:13,720 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:30:13,721 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:30:13,723 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:30:13,723 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:30:13,723 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:30:13,723 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:30:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '9090', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_d8f680cdfe0284e2efbe6477a6dffdd9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249798aaa235be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:30:13,723 - openai._base_client - DEBUG - request_id: req_d8f680cdfe0284e2efbe6477a6dffdd9
2025-03-22 23:30:13,724 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:30:13,726 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:30:13,727 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:30:13,727 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:30:13,727 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:30:13,727 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:30:13,727 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:30:13,727 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:30:21,095 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:30:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7201'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_79c6933fceea3b9be98b4d715eae1776'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924979c46df65be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:30:21,096 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:30:21,096 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:30:21,143 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:30:21,143 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:30:21,143 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:30:21,143 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:30:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7201', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_79c6933fceea3b9be98b4d715eae1776', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924979c46df65be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:30:21,144 - openai._base_client - DEBUG - request_id: req_79c6933fceea3b9be98b4d715eae1776
2025-03-22 23:30:21,145 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:30:21,147 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:30:21,148 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:30:21,148 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:30:21,148 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:30:21,148 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:30:21,148 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:30:21,148 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:30:27,070 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:30:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5762'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999606'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_c6ff8eba49a95712469e558fc02d0eca'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924979f2dbe75be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:30:27,071 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:30:27,071 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:30:27,073 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:30:27,073 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:30:27,073 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:30:27,073 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:30:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5762', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_c6ff8eba49a95712469e558fc02d0eca', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924979f2dbe75be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:30:27,073 - openai._base_client - DEBUG - request_id: req_c6ff8eba49a95712469e558fc02d0eca
2025-03-22 23:30:27,073 - XplainCrypto - INFO - Generated enhanced team section with 256 words
2025-03-22 23:30:27,073 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:30:27,075 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:30:27,075 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:30:27,075 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:30:27,075 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:30:27,075 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:30:27,075 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:30:27,075 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:30:31,208 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:30:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3974'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_a42df225ef43e6f7e3a26f0cc2314599'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92497a17dcfb5be0-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:30:31,209 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:30:31,209 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:30:31,212 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:30:31,212 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:30:31,213 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:30:31,213 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:30:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '3974', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_a42df225ef43e6f7e3a26f0cc2314599', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92497a17dcfb5be0-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:30:31,213 - openai._base_client - DEBUG - request_id: req_a42df225ef43e6f7e3a26f0cc2314599
2025-03-22 23:30:31,213 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:30:31,213 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:30:31,213 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,214 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,214 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,215 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,216 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,217 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:30:31,217 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:30:31,217 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:30:31,217 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,218 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,218 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,218 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:31,219 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:30:31,219 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:30:31,219 - XplainCrypto - INFO - Created project directory: docs/sui
2025-03-22 23:30:31,219 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:30:31,219 - XplainCrypto - WARNING - No references found, continuing without them
2025-03-22 23:30:31,219 - XplainCrypto - INFO - Using draft for report content
2025-03-22 23:30:31,228 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:30:31,230 - XplainCrypto - INFO - Added visualization key_metrics_table_20250322_232924.png to section Executive Summary
2025-03-22 23:30:31,231 - XplainCrypto - INFO - Added visualization basic_metrics_table_20250322_232925.png to section Introduction
2025-03-22 23:30:31,231 - XplainCrypto - INFO - Added visualization price_history_chart_20250322_232925.png to section Market Analysis
2025-03-22 23:30:31,231 - XplainCrypto - INFO - Added visualization volume_chart_20250322_232925.png to section Market Analysis
2025-03-22 23:30:31,231 - XplainCrypto - INFO - Added visualization tvl_chart_20250322_232924.png to section Market Analysis
2025-03-22 23:30:31,231 - XplainCrypto - INFO - Added visualization competitor_comparison_chart_20250322_232925.png to section Market Analysis
2025-03-22 23:30:31,232 - XplainCrypto - INFO - Added visualization token_distribution_chart_20250322_232924.png to section Tokenomics
2025-03-22 23:30:31,232 - XplainCrypto - INFO - Added visualization supply_table_20250322_232925.png to section Tokenomics
2025-03-22 23:30:31,232 - XplainCrypto - INFO - Added visualization governance_metrics_table_20250322_232925.png to section Governance and Community
2025-03-22 23:30:31,232 - XplainCrypto - INFO - Added visualization partnerships_table_20250322_232924.png to section Ecosystem and Partnerships
2025-03-22 23:30:31,233 - XplainCrypto - INFO - Added visualization risks_table_20250322_232924.png to section Risks and Opportunities
2025-03-22 23:30:31,233 - XplainCrypto - INFO - Added visualization opportunities_table_20250322_232925.png to section Risks and Opportunities
2025-03-22 23:30:31,233 - XplainCrypto - INFO - Added visualization roadmap_timeline_20250322_232925.png to section Team and Development
2025-03-22 23:30:31,233 - XplainCrypto - INFO - Added visualization key_takeaways_table_20250322_232925.png to section Conclusion
2025-03-22 23:30:31,237 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:31,237 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:31,237 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:31,237 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:31,379 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:31,380 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:31,380 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:31,380 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:31,509 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:31,521 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:31,522 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:31,522 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:31,762 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:31,762 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:31,762 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:31,762 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:31,961 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:31,962 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:31,962 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:31,962 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:32,184 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:32,184 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:32,184 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:32,184 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:32,381 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:32,381 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:32,381 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:32,381 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:32,571 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:32,571 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:32,571 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:32,571 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:32,717 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:32,717 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:32,717 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:32,717 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:32,845 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:32,845 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:32,845 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:32,845 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:32,966 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:32,967 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:32,967 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:32,967 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:33,088 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:33,088 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:33,088 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:33,088 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:33,196 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:33,196 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:33,196 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:33,196 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:33,421 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:30:33,421 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:30:33,421 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:30:33,421 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:30:33,578 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:30:33,579 - socketio - INFO - emitting event "progress" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,580 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,581 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:30:33,581 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (2404267 bytes)
2025-03-22 23:30:33,581 - socketio - INFO - emitting event "data" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,582 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,582 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:30:33,582 - XplainCrypto - INFO - Report generation completed in 69.29s with 0 errors
2025-03-22 23:30:33,582 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:30:33,582 - socketio - INFO - emitting event "log_update" to BjggsQ7y91z885jbAAAB [/]
2025-03-22 23:32:14,257 - socketio - DEBUG - Client disconnected: BjggsQ7y91z885jbAAAB
2025-03-22 23:32:16,098 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:32:16,130 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:32:16,135 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:32:16,141 - socketio - DEBUG - Client connected: Z9rCmYGBGjdVs2EHAAAB
2025-03-22 23:32:41,758 - socketio - DEBUG - Client disconnected: Z9rCmYGBGjdVs2EHAAAB
2025-03-22 23:32:43,543 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:32:43,592 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:32:43,605 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:32:43,642 - socketio - DEBUG - Client connected: GpOi-dwUlVqFqO75AAAB
2025-03-22 23:32:59,746 - socketio - DEBUG - Client disconnected: GpOi-dwUlVqFqO75AAAB
2025-03-22 23:33:01,742 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:33:01,782 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:33:01,790 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:33:01,796 - socketio - DEBUG - Client connected: Ciwe1e15eciWdWsHAAAB
2025-03-22 23:34:01,498 - socketio - DEBUG - Client disconnected: Ciwe1e15eciWdWsHAAAB
2025-03-22 23:34:03,390 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:34:03,431 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:34:03,436 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:34:03,615 - socketio - DEBUG - Client connected: gy2jvoJcQoGjkDtqAAAB
2025-03-22 23:34:32,280 - socketio - DEBUG - Client disconnected: gy2jvoJcQoGjkDtqAAAB
2025-03-22 23:34:34,003 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:34:34,032 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:34:34,037 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:34:34,048 - socketio - DEBUG - Client connected: t9ZDnMbZ2nx5bEdgAAAB
2025-03-22 23:34:42,635 - socketio - DEBUG - Client disconnected: t9ZDnMbZ2nx5bEdgAAAB
2025-03-22 23:34:44,344 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:34:44,375 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:34:44,380 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:34:44,615 - socketio - DEBUG - Client connected: FDfZghnNA6JuqUFrAAAB
2025-03-22 23:34:49,133 - socketio - DEBUG - Client disconnected: FDfZghnNA6JuqUFrAAAB
2025-03-22 23:34:50,762 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:34:50,793 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:34:50,797 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:34:50,803 - socketio - DEBUG - Client connected: 8ldSLNkKxLh8EppHAAAB
2025-03-22 23:35:26,004 - socketio - DEBUG - Client disconnected: 8ldSLNkKxLh8EppHAAAB
2025-03-22 23:35:27,708 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:35:27,738 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:35:27,743 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:35:27,747 - socketio - DEBUG - Client connected: zoXMK0NCalqcRCIgAAAB
2025-03-22 23:35:30,801 - socketio - INFO - received event "message" from zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,802 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:35:30,802 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:35:30,802 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,803 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,803 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:35:30,803 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:35:30,837 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:35:30,837 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,837 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,837 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,837 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,837 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:35:30,838 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:35:30,838 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:35:30,838 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:35:30,838 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,838 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:35:30,839 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:35:30,839 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:30,839 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:35:30,839 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:35:30,840 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:35:30,840 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:35:30,840 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:35:30,846 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:35:30,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:35:30,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,847 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,848 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,849 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,850 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,851 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,852 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,853 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,854 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:35:30,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,855 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,856 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,857 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,858 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,859 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,861 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:35:30,862 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:35:30,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,863 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,865 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,866 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,867 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,868 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,869 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,870 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,871 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,872 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,873 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,874 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:35:30,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,875 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,876 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,877 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,878 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,879 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,880 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,881 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,882 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,883 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,884 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,885 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,886 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,887 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,888 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,888 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:35:30,899 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:30,901 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:35:30,902 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,904 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,905 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,906 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,907 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,908 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:35:30,909 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:35:30,910 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,911 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,912 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,913 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,914 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,915 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,916 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,917 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,918 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,919 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,920 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,921 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,922 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,923 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,924 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,925 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:35:30,926 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:35:30,937 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:30,942 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,002 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,010 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:35:31,010 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_233530.png created, size: 85.3 KB
2025-03-22 23:35:31,010 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:35:31,010 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:35:31,010 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:35:31,010 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,010 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:35:31,010 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:35:31,181 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_233531.png
2025-03-22 23:35:31,181 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:35:31,181 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_233531.png created, size: 317.3 KB
2025-03-22 23:35:31,181 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:35:31,181 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:35:31,182 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:35:31,182 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:35:31,189 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,194 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,199 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,252 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,261 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_233531.png created, size: 88.3 KB
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:35:31,261 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:35:31,261 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:35:31,261 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:35:31,268 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,272 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,277 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,330 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,337 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_233531.png created, size: 81.4 KB
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:35:31,338 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:35:31,338 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:35:31,338 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:35:31,345 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,349 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,354 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,408 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,414 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:35:31,415 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_233531.png created, size: 81.3 KB
2025-03-22 23:35:31,415 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:35:31,415 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:35:31,415 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:35:31,415 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,415 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:35:31,415 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:35:31,572 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_233531.png
2025-03-22 23:35:31,572 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:35:31,573 - XplainCrypto - INFO - Visualization file volume_chart_20250322_233531.png created, size: 228.6 KB
2025-03-22 23:35:31,573 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:35:31,573 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:35:31,573 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:35:31,573 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,573 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:35:31,573 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:35:31,733 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:35:31,734 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_233531.png created, size: 137.6 KB
2025-03-22 23:35:31,734 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:35:31,734 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:35:31,734 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:35:31,734 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,734 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:35:31,734 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:35:31,920 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_233531.png
2025-03-22 23:35:31,921 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_233531.png created, size: 335.9 KB
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:35:31,921 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:35:31,921 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:35:31,921 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:35:31,928 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,932 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,938 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,989 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:31,995 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_233531.png created, size: 83.6 KB
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:35:31,995 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:35:31,995 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:35:31,995 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:35:32,003 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,009 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,014 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,069 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,077 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:35:32,077 - XplainCrypto - INFO - Visualization file risks_table_20250322_233532.png created, size: 84.0 KB
2025-03-22 23:35:32,077 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:35:32,077 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:35:32,077 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:35:32,077 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:32,077 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:35:32,077 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:35:32,190 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:35:32,190 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_233532.png created, size: 111.0 KB
2025-03-22 23:35:32,190 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:35:32,190 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:35:32,190 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:35:32,190 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:32,190 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:35:32,191 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:35:32,191 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:35:32,191 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:35:32,191 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:35:32,198 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,203 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,208 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,257 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,265 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_233532.png created, size: 90.6 KB
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:35:32,265 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:35:32,265 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:35:32,265 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:35:32,272 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,276 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,281 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,328 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:35:32,335 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Visualization file supply_table_20250322_233532.png created, size: 74.6 KB
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:35:32,335 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:35:32,335 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:35:32,486 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_233532.png created, size: 119.5 KB
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_233530.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_233531.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_233532.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_233532.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_233532.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_233532.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_233532.png
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:35:32,487 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:35:32,487 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,488 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,489 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,490 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,491 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,492 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,493 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,493 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,493 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,493 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,493 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,494 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,542 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,543 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,544 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:35:32,544 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:35:32,544 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:35:32,544 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,546 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,546 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,546 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:35:32,546 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:35:32,546 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:35:32,546 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:35:32,546 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:35:32,549 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:35:32,565 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:35:32,566 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:35:32,654 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10e3b44d0>
2025-03-22 23:35:32,654 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c84e960> server_hostname='api.openai.com' timeout=None
2025-03-22 23:35:32,660 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10e3b42d0>
2025-03-22 23:35:32,661 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:35:32,661 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:35:32,661 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:35:32,661 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:35:32,661 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:35:38,024 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:35:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4973'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_85c2fee13c24ed942a11271023b7cacd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=OcjHeNZ27b2Eg3PTHCrcZeWg2dwEGEW05F5sHk0QP6A-1742686538-1.0.1.1-mlqBXOXfwE6LoD4SvQe6xsMfj6H9zY2QbA.Zin_Fi4yDy_GoypVj6J8ckT8h05DANUx2vOjAKiYgzkeDdrT5m_iRlaTyLXQqINUA1DZVZXc; path=/; expires=Sun, 23-Mar-25 00:05:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=n7LHE_nTYcT46XyR9Zl0UiElZatpyjYP0bhL_ZxAp00-1742686538124-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249818dcd735bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:35:38,025 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:35:38,025 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:35:38,030 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:35:38,030 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:35:38,030 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:35:38,030 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:35:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '4973'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_85c2fee13c24ed942a11271023b7cacd'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=OcjHeNZ27b2Eg3PTHCrcZeWg2dwEGEW05F5sHk0QP6A-1742686538-1.0.1.1-mlqBXOXfwE6LoD4SvQe6xsMfj6H9zY2QbA.Zin_Fi4yDy_GoypVj6J8ckT8h05DANUx2vOjAKiYgzkeDdrT5m_iRlaTyLXQqINUA1DZVZXc; path=/; expires=Sun, 23-Mar-25 00:05:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=n7LHE_nTYcT46XyR9Zl0UiElZatpyjYP0bhL_ZxAp00-1742686538124-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9249818dcd735bde-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:35:38,030 - openai._base_client - DEBUG - request_id: req_85c2fee13c24ed942a11271023b7cacd
2025-03-22 23:35:38,040 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:35:38,042 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:35:38,042 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:35:38,042 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:35:38,043 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:35:38,043 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:35:38,043 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:35:38,043 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:35:42,360 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:35:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4169'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_82c7ac0ef4af6c7727eb0db392ef8111'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924981af6a845bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:35:42,360 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:35:42,361 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:35:42,364 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:35:42,364 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:35:42,364 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:35:42,364 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:35:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4169', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_82c7ac0ef4af6c7727eb0db392ef8111', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924981af6a845bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:35:42,364 - openai._base_client - DEBUG - request_id: req_82c7ac0ef4af6c7727eb0db392ef8111
2025-03-22 23:35:42,365 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:35:42,367 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:35:42,368 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:35:42,368 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:35:42,368 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:35:42,368 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:35:42,368 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:35:42,368 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:35:49,654 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:35:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7137'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_5bb3de86509106965c1857d478fd7c12'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924981ca7d355bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:35:49,655 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:35:49,655 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:35:49,660 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:35:49,660 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:35:49,660 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:35:49,660 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:35:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7137', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_5bb3de86509106965c1857d478fd7c12', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924981ca7d355bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:35:49,660 - openai._base_client - DEBUG - request_id: req_5bb3de86509106965c1857d478fd7c12
2025-03-22 23:35:49,661 - XplainCrypto - INFO - Generated enhanced market analysis with 345 words
2025-03-22 23:35:49,661 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:35:49,664 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:35:49,665 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:35:49,665 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:35:49,666 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:35:49,666 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:35:49,666 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:35:49,666 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:35:55,566 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:35:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5739'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_edbf1e0fba2b5656e8a413c817767583'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924981f819bf5bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:35:55,567 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:35:55,567 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:35:55,568 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:35:55,568 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:35:55,568 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:35:55,568 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:35:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5739', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_edbf1e0fba2b5656e8a413c817767583', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924981f819bf5bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:35:55,569 - openai._base_client - DEBUG - request_id: req_edbf1e0fba2b5656e8a413c817767583
2025-03-22 23:35:55,569 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:35:55,572 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:35:55,574 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:35:55,574 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:35:55,574 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:35:55,574 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:35:55,574 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:35:55,574 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:36:05,908 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:36:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'10166'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999676'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_60a4aba18f7f0a6bf6e81651df919b62'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249821cf8da5bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:36:05,908 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:36:05,908 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:36:05,916 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:36:05,917 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:36:05,917 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:36:05,917 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:36:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '10166', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999676', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_60a4aba18f7f0a6bf6e81651df919b62', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249821cf8da5bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:36:05,917 - openai._base_client - DEBUG - request_id: req_60a4aba18f7f0a6bf6e81651df919b62
2025-03-22 23:36:05,917 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:36:05,919 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:36:05,919 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:36:05,920 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:36:05,920 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:36:05,920 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:36:05,920 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:36:05,920 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:36:11,469 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:36:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5396'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_02ed2e8d1298cc7854ec03aba2bd5409'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249825da8015bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:36:11,470 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:36:11,471 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:36:11,476 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:36:11,476 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:36:11,476 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:36:11,476 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:36:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5396', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_02ed2e8d1298cc7854ec03aba2bd5409', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249825da8015bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:36:11,477 - openai._base_client - DEBUG - request_id: req_02ed2e8d1298cc7854ec03aba2bd5409
2025-03-22 23:36:11,478 - XplainCrypto - INFO - Generated enhanced governance section with 314 words
2025-03-22 23:36:11,478 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:36:11,482 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:36:11,483 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:36:11,483 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:36:11,484 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:36:11,484 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:36:11,484 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:36:11,484 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:36:20,682 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:36:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'9023'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_76f9c91f1d4ca2bfb874966de02ec950'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924982806fdb5bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:36:20,683 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:36:20,683 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:36:20,698 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:36:20,699 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:36:20,699 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:36:20,699 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:36:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '9023', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_76f9c91f1d4ca2bfb874966de02ec950', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924982806fdb5bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:36:20,699 - openai._base_client - DEBUG - request_id: req_76f9c91f1d4ca2bfb874966de02ec950
2025-03-22 23:36:20,699 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:36:20,701 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:36:20,701 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:36:20,701 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:36:20,702 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:36:20,702 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:36:20,702 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:36:20,702 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:36:28,263 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:36:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7363'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_90535ddd4a3235330a8e50defbbaf7a4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924982ba0db15bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:36:28,264 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:36:28,264 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:36:28,264 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:36:28,264 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:36:28,264 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:36:28,264 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:36:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7363', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_90535ddd4a3235330a8e50defbbaf7a4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924982ba0db15bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:36:28,264 - openai._base_client - DEBUG - request_id: req_90535ddd4a3235330a8e50defbbaf7a4
2025-03-22 23:36:28,265 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:36:28,266 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:36:28,266 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:36:28,267 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:36:28,267 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:36:28,267 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:36:28,267 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:36:28,267 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:36:34,288 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:36:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5820'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999606'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_1b9c6801e879d4912ceaf7a7c2a6c091'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924982e95a915bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:36:34,289 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:36:34,289 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:36:34,290 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:36:34,290 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:36:34,290 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:36:34,290 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:36:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5820', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_1b9c6801e879d4912ceaf7a7c2a6c091', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924982e95a915bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:36:34,290 - openai._base_client - DEBUG - request_id: req_1b9c6801e879d4912ceaf7a7c2a6c091
2025-03-22 23:36:34,291 - XplainCrypto - INFO - Generated enhanced team section with 275 words
2025-03-22 23:36:34,291 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:36:34,292 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:36:34,293 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:36:34,293 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:36:34,293 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:36:34,293 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:36:34,294 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:36:34,294 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:36:37,312 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:36:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'2853'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_8d28f3fa7701724c4fd2fa9b584baeb1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249830ef9275bde-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:36:37,313 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:36:37,313 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:36:37,318 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:36:37,319 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:36:37,319 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:36:37,319 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:36:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '2853', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_8d28f3fa7701724c4fd2fa9b584baeb1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249830ef9275bde-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:36:37,319 - openai._base_client - DEBUG - request_id: req_8d28f3fa7701724c4fd2fa9b584baeb1
2025-03-22 23:36:37,320 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:36:37,320 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:36:37,320 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,321 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,322 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,323 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,323 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,323 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,323 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,323 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,323 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,324 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,324 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,324 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:36:37,324 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:36:37,324 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:36:37,324 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,325 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,326 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,326 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:37,326 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:36:37,326 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:36:37,326 - XplainCrypto - INFO - Created project directory: docs/sui
2025-03-22 23:36:37,327 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing executive_summary, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing introduction, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing market_analysis, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing technical_analysis, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing governance_and_community, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing ecosystem_and_partnerships, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing risks_and_opportunities, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing team_and_development, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - Missing conclusion, using default
2025-03-22 23:36:37,327 - XplainCrypto - WARNING - No references found, continuing without them
2025-03-22 23:36:37,327 - XplainCrypto - INFO - Using draft for report content
2025-03-22 23:36:37,332 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:36:37,333 - XplainCrypto - INFO - Added content for Executive Summary from state.executive_summary
2025-03-22 23:36:37,333 - XplainCrypto - INFO - Processing 1 visualizations for section Executive Summary
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Found 9 files matching key_metrics_table visualization pattern
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Adding visualization from docs/sui/key_metrics_table_20250322_233531.png
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Successfully added visualization key_metrics_table_20250322_233531.png to section Executive Summary
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Added content for Introduction from state.introduction
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Processing 1 visualizations for section Introduction
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Found 9 files matching basic_metrics_table visualization pattern
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Adding visualization from docs/sui/basic_metrics_table_20250322_233531.png
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Successfully added visualization basic_metrics_table_20250322_233531.png to section Introduction
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Added content for Market Analysis from state.market_analysis
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Processing 4 visualizations for section Market Analysis
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Found 9 files matching price_history_chart visualization pattern
2025-03-22 23:36:37,334 - XplainCrypto - INFO - Adding visualization from docs/sui/price_history_chart_20250322_233531.png
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Successfully added visualization price_history_chart_20250322_233531.png to section Market Analysis
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Found 9 files matching volume_chart visualization pattern
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Adding visualization from docs/sui/volume_chart_20250322_233531.png
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Successfully added visualization volume_chart_20250322_233531.png to section Market Analysis
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Found 9 files matching tvl_chart visualization pattern
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Adding visualization from docs/sui/tvl_chart_20250322_233531.png
2025-03-22 23:36:37,335 - XplainCrypto - INFO - Successfully added visualization tvl_chart_20250322_233531.png to section Market Analysis
2025-03-22 23:36:37,336 - XplainCrypto - INFO - Found 9 files matching competitor_comparison_chart visualization pattern
2025-03-22 23:36:37,336 - XplainCrypto - INFO - Adding visualization from docs/sui/competitor_comparison_chart_20250322_233532.png
2025-03-22 23:36:37,336 - XplainCrypto - INFO - Successfully added visualization competitor_comparison_chart_20250322_233532.png to section Market Analysis
2025-03-22 23:36:37,336 - XplainCrypto - INFO - Added content for Technical Analysis from state.technical_analysis
2025-03-22 23:36:37,337 - XplainCrypto - INFO - Processing 0 visualizations for section Technical Analysis
2025-03-22 23:36:37,337 - XplainCrypto - INFO - Added content for Tokenomics from state.tokenomics
2025-03-22 23:36:37,337 - XplainCrypto - INFO - Processing 2 visualizations for section Tokenomics
2025-03-22 23:36:37,338 - XplainCrypto - INFO - Found 9 files matching token_distribution_chart visualization pattern
2025-03-22 23:36:37,338 - XplainCrypto - INFO - Adding visualization from docs/sui/token_distribution_chart_20250322_233531.png
2025-03-22 23:36:37,338 - XplainCrypto - INFO - Successfully added visualization token_distribution_chart_20250322_233531.png to section Tokenomics
2025-03-22 23:36:37,338 - XplainCrypto - INFO - Found 9 files matching supply_table visualization pattern
2025-03-22 23:36:37,338 - XplainCrypto - INFO - Adding visualization from docs/sui/supply_table_20250322_233532.png
2025-03-22 23:36:37,338 - XplainCrypto - INFO - Successfully added visualization supply_table_20250322_233532.png to section Tokenomics
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Added content for Governance and Community from state.governance_and_community
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Processing 1 visualizations for section Governance and Community
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Found 9 files matching governance_metrics_table visualization pattern
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Adding visualization from docs/sui/governance_metrics_table_20250322_233531.png
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Successfully added visualization governance_metrics_table_20250322_233531.png to section Governance and Community
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Added content for Ecosystem and Partnerships from state.ecosystem_and_partnerships
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Processing 1 visualizations for section Ecosystem and Partnerships
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Found 9 files matching partnerships_table visualization pattern
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Adding visualization from docs/sui/partnerships_table_20250322_233530.png
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Successfully added visualization partnerships_table_20250322_233530.png to section Ecosystem and Partnerships
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Added content for Risks and Opportunities from state.risks_and_opportunities
2025-03-22 23:36:37,339 - XplainCrypto - INFO - Processing 2 visualizations for section Risks and Opportunities
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Found 9 files matching risks_table visualization pattern
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Adding visualization from docs/sui/risks_table_20250322_233532.png
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Successfully added visualization risks_table_20250322_233532.png to section Risks and Opportunities
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Found 9 files matching opportunities_table visualization pattern
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Adding visualization from docs/sui/opportunities_table_20250322_233531.png
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Successfully added visualization opportunities_table_20250322_233531.png to section Risks and Opportunities
2025-03-22 23:36:37,340 - XplainCrypto - INFO - Added content for Team and Development from state.team_and_development
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Processing 1 visualizations for section Team and Development
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Found 9 files matching roadmap_timeline visualization pattern
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Adding visualization from docs/sui/roadmap_timeline_20250322_233532.png
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Successfully added visualization roadmap_timeline_20250322_233532.png to section Team and Development
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Added content for Conclusion from state.conclusion
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Processing 1 visualizations for section Conclusion
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Found 9 files matching key_takeaways_table visualization pattern
2025-03-22 23:36:37,341 - XplainCrypto - INFO - Adding visualization from docs/sui/key_takeaways_table_20250322_233532.png
2025-03-22 23:36:37,342 - XplainCrypto - INFO - Successfully added visualization key_takeaways_table_20250322_233532.png to section Conclusion
2025-03-22 23:36:37,345 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:37,345 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:37,345 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:37,345 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:37,464 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:37,464 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:37,464 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:37,464 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:37,593 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:37,593 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:37,593 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:37,593 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:37,810 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:37,810 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:37,810 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:37,810 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:37,999 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:37,999 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:37,999 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:37,999 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:38,208 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:38,208 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:38,208 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:38,208 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:38,396 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:38,396 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:38,396 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:38,396 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:38,592 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:38,592 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:38,592 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:38,592 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:38,694 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:38,694 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:38,694 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:38,694 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:38,797 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:38,797 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:38,797 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:38,797 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:38,907 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:38,907 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:38,907 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:38,907 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:39,023 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:39,023 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:39,023 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:39,023 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:39,146 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:39,147 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:39,147 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:39,147 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:39,371 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:36:39,371 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:36:39,371 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:36:39,371 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:36:39,523 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:36:39,524 - socketio - INFO - emitting event "progress" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,524 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,524 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,525 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,526 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,527 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,528 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,530 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:36:39,530 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (2350524 bytes)
2025-03-22 23:36:39,530 - socketio - INFO - emitting event "data" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,532 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,532 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:36:39,532 - XplainCrypto - INFO - Report generation completed in 68.73s with 0 errors
2025-03-22 23:36:39,532 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:36:39,533 - socketio - INFO - emitting event "log_update" to zoXMK0NCalqcRCIgAAAB [/]
2025-03-22 23:37:44,892 - socketio - DEBUG - Client disconnected: zoXMK0NCalqcRCIgAAAB
2025-03-22 23:37:46,657 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:37:46,687 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:37:46,691 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:37:46,695 - socketio - DEBUG - Client connected: -iDVxUfeglraK6czAAAB
2025-03-22 23:38:05,392 - socketio - DEBUG - Client disconnected: -iDVxUfeglraK6czAAAB
2025-03-22 23:38:07,227 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:38:07,255 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:38:07,259 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:38:07,268 - socketio - DEBUG - Client connected: UsCfGrqPMG80BhnOAAAB
2025-03-22 23:38:24,375 - socketio - DEBUG - Client disconnected: UsCfGrqPMG80BhnOAAAB
2025-03-22 23:38:26,071 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:38:26,099 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:38:26,103 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:38:26,113 - socketio - DEBUG - Client connected: QjimDEN4MJ8-7gGyAAAB
2025-03-22 23:38:49,847 - socketio - DEBUG - Client disconnected: QjimDEN4MJ8-7gGyAAAB
2025-03-22 23:38:51,483 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:38:51,512 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:38:51,516 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:38:51,617 - socketio - DEBUG - Client connected: JdNd2FfryymmF6xuAAAB
2025-03-22 23:39:06,492 - socketio - INFO - received event "message" from JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,494 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:39:06,496 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:39:06,496 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,500 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,501 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:39:06,502 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:39:06,532 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:39:06,533 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,533 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,534 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,534 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,535 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:39:06,535 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:39:06,535 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:39:06,537 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:39:06,540 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,540 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,541 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,541 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,541 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,542 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:39:06,542 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:39:06,542 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,542 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,543 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:06,543 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:39:06,543 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:39:06,543 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:39:06,543 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:39:06,543 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:39:06,544 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:39:06,544 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:39:06,544 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:39:06,545 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:39:06,545 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:39:06,545 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:06,545 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:39:06,545 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:39:06,549 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:39:06,550 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,551 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,551 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:39:06,551 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,558 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,564 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,567 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,567 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,568 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:39:06,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:39:06,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,608 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,609 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,609 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,610 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,611 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:39:06,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,612 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,636 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,664 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,673 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,689 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,690 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,691 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,692 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:39:06,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,693 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,696 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:39:06,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:39:06,697 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,698 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,699 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:39:06,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,700 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,701 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,718 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,720 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,721 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,722 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:39:06,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,723 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:39:06,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,724 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,725 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,726 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,727 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,728 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,729 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,730 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,731 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,732 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,733 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,734 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:39:06,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,735 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,736 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,737 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,738 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,739 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,740 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,741 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,742 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,743 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,744 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,745 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,746 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,747 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,748 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,749 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,750 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:39:06,773 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,774 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,775 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:39:06,776 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,777 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,778 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,779 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,780 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,781 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,782 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,783 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,784 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:39:06,785 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,786 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,787 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,788 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:39:06,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,789 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,790 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,791 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,792 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,793 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,794 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,795 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,796 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,797 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,798 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,799 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,800 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:39:06,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,801 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:39:06,801 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:39:06,961 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_233906.png
2025-03-22 23:39:06,962 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Visualization file volume_chart_20250322_233906.png created, size: 241.4 KB
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:39:06,962 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:39:06,962 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:39:06,962 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:39:06,973 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:06,977 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:06,981 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,038 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,044 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Visualization file supply_table_20250322_233906.png created, size: 74.2 KB
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:39:07,044 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:39:07,044 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:39:07,044 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:39:07,052 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,056 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,060 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,111 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,119 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_233907.png created, size: 88.3 KB
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:39:07,119 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:39:07,119 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:39:07,119 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:39:07,126 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,130 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,134 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,181 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,187 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:39:07,187 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_233907.png created, size: 83.2 KB
2025-03-22 23:39:07,187 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:39:07,188 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:39:07,188 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:39:07,188 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,188 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:39:07,188 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_233907.png
2025-03-22 23:39:07,367 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_233907.png created, size: 337.2 KB
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:39:07,367 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:39:07,367 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:39:07,367 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:39:07,374 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,379 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,384 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,433 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,441 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Visualization file risks_table_20250322_233907.png created, size: 84.0 KB
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:39:07,441 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:39:07,441 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:39:07,442 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:39:07,442 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:39:07,442 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:39:07,448 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,451 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,456 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,506 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,512 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:39:07,512 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_233907.png created, size: 83.1 KB
2025-03-22 23:39:07,512 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:39:07,512 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:39:07,512 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:39:07,512 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,512 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:39:07,512 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:39:07,657 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:39:07,657 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_233907.png created, size: 137.6 KB
2025-03-22 23:39:07,657 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:39:07,657 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:39:07,658 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,658 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:39:07,658 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:39:07,658 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:39:07,658 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:39:07,806 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:39:07,806 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_233907.png created, size: 117.4 KB
2025-03-22 23:39:07,806 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:39:07,806 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:39:07,806 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,807 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:39:07,807 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:39:07,807 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:39:07,807 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:39:07,807 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:39:07,807 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:39:07,814 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,817 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,823 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,873 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,880 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:39:07,880 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_233907.png created, size: 79.3 KB
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:39:07,881 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:39:07,881 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:39:07,882 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:39:07,891 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,897 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,903 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,960 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:07,968 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:39:07,968 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_233907.png created, size: 90.6 KB
2025-03-22 23:39:07,968 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:39:07,968 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:39:07,969 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:39:07,969 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:07,969 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:39:07,969 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:39:08,090 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:39:08,090 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_233907.png created, size: 111.0 KB
2025-03-22 23:39:08,090 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:39:08,090 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:39:08,090 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:39:08,090 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:08,090 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:39:08,090 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:39:08,274 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_233908.png
2025-03-22 23:39:08,274 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_233908.png created, size: 361.8 KB
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:39:08,275 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:39:08,275 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:39:08,275 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:39:08,282 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:08,287 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:08,293 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:08,343 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:39:08,350 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_233908.png created, size: 85.3 KB
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_233906.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_233906.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_233907.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_233908.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_233908.png
2025-03-22 23:39:08,351 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:39:08,352 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:39:08,352 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,352 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,353 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,354 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,355 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,356 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,357 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,358 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,359 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,360 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,361 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,362 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:39:08,362 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:39:08,362 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:39:08,362 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,365 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,365 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,365 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:39:08,365 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:39:08,365 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:39:08,365 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:39:08,366 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:39:08,371 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:08,392 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:08,392 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:39:08,413 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x15d0c14d0>
2025-03-22 23:39:08,413 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x122a4e960> server_hostname='api.openai.com' timeout=None
2025-03-22 23:39:08,422 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x15cfe82d0>
2025-03-22 23:39:08,423 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:08,423 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:08,423 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:08,423 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:08,423 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:16,312 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7457'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_267b2b0e8f536bd0295c92b6d0e33d54'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=_kVOlrD0b7dBPAfD3qt2vK02EyR_Xmuxas.Vh__zQOk-1742686756-1.0.1.1-_.QJCYrjA7RP7tb782LvoUKQqYvbYrh3vB.AyjCWtTxb.INqMT.hW0nyjmVPlBFJxE.ZZwISStZ5sBI.k7w86h3bLlGG7JHzgO0OUUtToyc; path=/; expires=Sun, 23-Mar-25 00:09:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=dpHmTa4gAhDc16axl1caC40oeJv3Ezcy_w076UsK.ZM-1742686756413-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924986d25e485bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:16,314 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:16,315 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:16,315 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:16,315 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:16,315 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:16,315 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:39:16 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '7457'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_267b2b0e8f536bd0295c92b6d0e33d54'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=_kVOlrD0b7dBPAfD3qt2vK02EyR_Xmuxas.Vh__zQOk-1742686756-1.0.1.1-_.QJCYrjA7RP7tb782LvoUKQqYvbYrh3vB.AyjCWtTxb.INqMT.hW0nyjmVPlBFJxE.ZZwISStZ5sBI.k7w86h3bLlGG7JHzgO0OUUtToyc; path=/; expires=Sun, 23-Mar-25 00:09:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=dpHmTa4gAhDc16axl1caC40oeJv3Ezcy_w076UsK.ZM-1742686756413-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '924986d25e485bd3-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:39:16,316 - openai._base_client - DEBUG - request_id: req_267b2b0e8f536bd0295c92b6d0e33d54
2025-03-22 23:39:16,331 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:39:16,333 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:16,334 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:16,334 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:16,334 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:16,334 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:16,334 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:16,335 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:20,469 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3983'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_52d0f0733b2df0f016deba9d4ca81aef'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92498703cf9e5bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:20,470 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:20,470 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:20,473 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:20,473 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:20,473 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:20,473 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:39:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '3983', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_52d0f0733b2df0f016deba9d4ca81aef', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92498703cf9e5bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:39:20,474 - openai._base_client - DEBUG - request_id: req_52d0f0733b2df0f016deba9d4ca81aef
2025-03-22 23:39:20,474 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:39:20,476 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:20,476 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:20,476 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:20,476 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:20,476 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:20,476 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:20,477 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:27,849 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7210'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_524e09950fdd93a576f35195798ace32'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249871da86d5bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:27,851 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:27,851 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:27,857 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:27,857 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:27,857 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:27,857 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:39:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7210', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_524e09950fdd93a576f35195798ace32', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249871da86d5bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:39:27,858 - openai._base_client - DEBUG - request_id: req_524e09950fdd93a576f35195798ace32
2025-03-22 23:39:27,858 - XplainCrypto - INFO - Generated enhanced market analysis with 368 words
2025-03-22 23:39:27,858 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:39:27,861 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:27,862 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:27,862 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:27,862 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:27,862 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:27,863 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:27,863 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:33,479 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5444'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_21e7d9478ca71dda32c783ec5249e3ad'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249874bc9d15bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:33,479 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:33,479 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:33,489 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:33,489 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:33,489 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:33,489 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:39:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5444', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_21e7d9478ca71dda32c783ec5249e3ad', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249874bc9d15bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:39:33,489 - openai._base_client - DEBUG - request_id: req_21e7d9478ca71dda32c783ec5249e3ad
2025-03-22 23:39:33,489 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:39:33,491 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:33,491 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:33,492 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:33,492 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:33,492 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:33,492 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:33,492 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:40,034 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6392'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999675'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_119bb7038937ebe77068919b6e30b617'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249876efd7a5bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:40,035 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:40,035 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:40,038 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:40,038 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:40,039 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:40,039 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:39:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6392', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999675', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_119bb7038937ebe77068919b6e30b617', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249876efd7a5bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:39:40,039 - openai._base_client - DEBUG - request_id: req_119bb7038937ebe77068919b6e30b617
2025-03-22 23:39:40,040 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:39:40,044 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:40,045 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:40,045 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:40,045 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:40,045 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:40,045 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:40,045 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:45,329 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5042'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_7ef6c5b193ebc2fdb1ab8afe31de7489'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92498797fa655bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:45,330 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:45,331 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:45,331 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:45,331 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:45,332 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:45,332 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:39:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5042', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_7ef6c5b193ebc2fdb1ab8afe31de7489', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92498797fa655bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:39:45,332 - openai._base_client - DEBUG - request_id: req_7ef6c5b193ebc2fdb1ab8afe31de7489
2025-03-22 23:39:45,333 - XplainCrypto - INFO - Generated enhanced governance section with 311 words
2025-03-22 23:39:45,333 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:39:45,336 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:45,336 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:45,337 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:45,337 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:45,337 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:45,337 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:45,337 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:39:54,006 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:39:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'8515'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_8c6f54063714ddceb120fdfb5603b3b1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924987b90b245bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:39:54,009 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:39:54,009 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:39:54,015 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:39:54,015 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:39:54,015 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:39:54,015 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:39:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '8515', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_8c6f54063714ddceb120fdfb5603b3b1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924987b90b245bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:39:54,016 - openai._base_client - DEBUG - request_id: req_8c6f54063714ddceb120fdfb5603b3b1
2025-03-22 23:39:54,019 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:39:54,027 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:39:54,028 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:39:54,029 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:39:54,029 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:39:54,029 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:39:54,029 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:39:54,029 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:40:02,091 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:40:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'7886'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_7b92aa75a10f037477036cbb75a50bb1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924987ef59c75bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:40:02,096 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:40:02,096 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:40:02,097 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:40:02,097 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:40:02,097 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:40:02,097 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:40:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '7886', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_7b92aa75a10f037477036cbb75a50bb1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924987ef59c75bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:40:02,098 - openai._base_client - DEBUG - request_id: req_7b92aa75a10f037477036cbb75a50bb1
2025-03-22 23:40:02,101 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:40:02,107 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:40:02,108 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:40:02,109 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:40:02,109 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:40:02,109 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:40:02,110 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:40:02,110 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:40:06,759 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:40:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4497'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999606'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_db08d82dd030fedaf75cd89337b9692a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92498821d8315bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:40:06,760 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:40:06,760 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:40:06,761 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:40:06,761 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:40:06,761 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:40:06,762 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:40:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4497', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_db08d82dd030fedaf75cd89337b9692a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92498821d8315bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:40:06,762 - openai._base_client - DEBUG - request_id: req_db08d82dd030fedaf75cd89337b9692a
2025-03-22 23:40:06,763 - XplainCrypto - INFO - Generated enhanced team section with 267 words
2025-03-22 23:40:06,763 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:40:06,766 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:40:06,767 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:40:06,767 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:40:06,768 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:40:06,768 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:40:06,768 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:40:06,768 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:40:10,098 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:40:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3181'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_011f1d2249c3b15d03464e12dabd3a51'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249883efef65bd3-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:40:10,099 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:40:10,099 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:40:10,099 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:40:10,099 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:40:10,099 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:40:10,099 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:40:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '3181', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_011f1d2249c3b15d03464e12dabd3a51', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249883efef65bd3-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:40:10,099 - openai._base_client - DEBUG - request_id: req_011f1d2249c3b15d03464e12dabd3a51
2025-03-22 23:40:10,099 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:40:10,099 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,100 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,101 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:40:10,101 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:40:10,101 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:40:10,101 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,102 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,102 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,102 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:10,102 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:40:10,102 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:40:10,102 - XplainCrypto - INFO - Created project directory: docs/sui
2025-03-22 23:40:10,102 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:40:10,103 - XplainCrypto - INFO - State has the following attributes for content:
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - draft: # SUI Research Report
*Generated on 2025-03-22 23:...
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - governance: governance roles incentivize users to hold and use...
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - price_analysis: ### 1. Price Performance and Trends
60-Day Change:...
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - progress: Publishing report for SUI......
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - project_name: SUI...
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - research_summary: Purpose
**Primary Objectives of SUI**:  
SUI is de...
2025-03-22 23:40:10,103 - XplainCrypto - INFO -   - tokenomics: Tokenomics and Supply Metrics
**Total Supply of SU...
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing executive_summary, using default: Concise overview of key investment points and real-time metrics for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing introduction, using default: Background information and basic details about the cryptocurrency for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing market_analysis, using default: In-depth market performance data and comparisons for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing technical_analysis, using default: Evaluation of technical foundations and architecture for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing governance_and_community, using default: Assessment of decision-making processes and community engagement for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing ecosystem_and_partnerships, using default: Evaluation of project's network and external relationships for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing risks_and_opportunities, using default: Identification of challenges and growth potential for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing team_and_development, using default: Assessment of the team and roadmap for SUI.
2025-03-22 23:40:10,103 - XplainCrypto - WARNING - Missing conclusion, using default: Summary of findings and investment outlook for SUI.
2025-03-22 23:40:10,104 - XplainCrypto - WARNING - No references found, continuing without them
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Using draft for report content: 22909 characters
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 1614 characters for Executive Summary from draft
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 1479 characters for Introduction from draft
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 2534 characters for Market Analysis from draft
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 2835 characters for Technical Analysis from draft
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 2707 characters for Tokenomics from draft
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 2183 characters for Governance and Community from draft
2025-03-22 23:40:10,104 - XplainCrypto - INFO - Extracted 2959 characters for Ecosystem and Partnerships from draft
2025-03-22 23:40:10,105 - XplainCrypto - INFO - Extracted 63 characters for Risks and Opportunities from draft
2025-03-22 23:40:10,105 - XplainCrypto - INFO - Extracted 1899 characters for Team and Development from draft
2025-03-22 23:40:10,105 - XplainCrypto - INFO - Extracted 1690 characters for Conclusion from draft
2025-03-22 23:40:10,109 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:40:10,110 - XplainCrypto - INFO - Processing section: Executive Summary
2025-03-22 23:40:10,110 - XplainCrypto - INFO - Section mapping: Executive Summary -> executive_summary
2025-03-22 23:40:10,110 - XplainCrypto - INFO - Found content in state.executive_summary: **Executive Summary: SUI Cryptocurrency Research R...
2025-03-22 23:40:10,110 - XplainCrypto - INFO - Added content for Executive Summary from state.executive_summary
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Processing 1 visualizations for section Executive Summary
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Found 10 files matching key_metrics_table visualization pattern
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Adding visualization from docs/sui/key_metrics_table_20250322_233907.png
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Successfully added visualization key_metrics_table_20250322_233907.png to section Executive Summary
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Processing section: Introduction
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Section mapping: Introduction -> introduction
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Found content in state.introduction: Introduction

In the rapidly evolving landscape of...
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Added content for Introduction from state.introduction
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Processing 1 visualizations for section Introduction
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Found 10 files matching basic_metrics_table visualization pattern
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Adding visualization from docs/sui/basic_metrics_table_20250322_233907.png
2025-03-22 23:40:10,111 - XplainCrypto - INFO - Successfully added visualization basic_metrics_table_20250322_233907.png to section Introduction
2025-03-22 23:40:10,112 - XplainCrypto - INFO - Processing section: Market Analysis
2025-03-22 23:40:10,112 - XplainCrypto - INFO - Section mapping: Market Analysis -> market_analysis
2025-03-22 23:40:10,112 - XplainCrypto - INFO - Found content in state.market_analysis: # Market Analysis of SUI Cryptocurrency

### 1. Cu...
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Added content for Market Analysis from state.market_analysis
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Processing 4 visualizations for section Market Analysis
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Found 10 files matching price_history_chart visualization pattern
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Adding visualization from docs/sui/price_history_chart_20250322_233907.png
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Successfully added visualization price_history_chart_20250322_233907.png to section Market Analysis
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Found 10 files matching volume_chart visualization pattern
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Adding visualization from docs/sui/volume_chart_20250322_233906.png
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Successfully added visualization volume_chart_20250322_233906.png to section Market Analysis
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Found 10 files matching tvl_chart visualization pattern
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Adding visualization from docs/sui/tvl_chart_20250322_233908.png
2025-03-22 23:40:10,113 - XplainCrypto - INFO - Successfully added visualization tvl_chart_20250322_233908.png to section Market Analysis
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Found 10 files matching competitor_comparison_chart visualization pattern
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Adding visualization from docs/sui/competitor_comparison_chart_20250322_233907.png
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Successfully added visualization competitor_comparison_chart_20250322_233907.png to section Market Analysis
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Processing section: Technical Analysis
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Section mapping: Technical Analysis -> technical_analysis
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Found content in state.technical_analysis: **Technical Analysis of SUI Cryptocurrency**

SUI ...
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Added content for Technical Analysis from state.technical_analysis
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Processing 0 visualizations for section Technical Analysis
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Processing section: Tokenomics
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Section mapping: Tokenomics -> tokenomics
2025-03-22 23:40:10,114 - XplainCrypto - INFO - Found content in state.tokenomics: ### Tokenomics Analysis of SUI Cryptocurrency

###...
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Added content for Tokenomics from state.tokenomics
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Processing 2 visualizations for section Tokenomics
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Found 10 files matching token_distribution_chart visualization pattern
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Adding visualization from docs/sui/token_distribution_chart_20250322_233907.png
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Successfully added visualization token_distribution_chart_20250322_233907.png to section Tokenomics
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Found 10 files matching supply_table visualization pattern
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Adding visualization from docs/sui/supply_table_20250322_233906.png
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Successfully added visualization supply_table_20250322_233906.png to section Tokenomics
2025-03-22 23:40:10,115 - XplainCrypto - INFO - Processing section: Governance and Community
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Section mapping: Governance and Community -> governance_and_community
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Found content in state.governance_and_community: ### Governance Model

SUI operates under a decentr...
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Added content for Governance and Community from state.governance_and_community
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Processing 1 visualizations for section Governance and Community
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Found 10 files matching governance_metrics_table visualization pattern
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Adding visualization from docs/sui/governance_metrics_table_20250322_233907.png
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Successfully added visualization governance_metrics_table_20250322_233907.png to section Governance and Community
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Processing section: Ecosystem and Partnerships
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Section mapping: Ecosystem and Partnerships -> ecosystem_and_partnerships
2025-03-22 23:40:10,116 - XplainCrypto - INFO - Found content in state.ecosystem_and_partnerships: **Ecosystem and Partnerships Analysis of SUI Crypt...
2025-03-22 23:40:10,117 - XplainCrypto - INFO - Added content for Ecosystem and Partnerships from state.ecosystem_and_partnerships
2025-03-22 23:40:10,117 - XplainCrypto - INFO - Processing 1 visualizations for section Ecosystem and Partnerships
2025-03-22 23:40:10,117 - XplainCrypto - INFO - Found 10 files matching partnerships_table visualization pattern
2025-03-22 23:40:10,117 - XplainCrypto - INFO - Adding visualization from docs/sui/partnerships_table_20250322_233908.png
2025-03-22 23:40:10,179 - XplainCrypto - INFO - Successfully added visualization partnerships_table_20250322_233908.png to section Ecosystem and Partnerships
2025-03-22 23:40:10,179 - XplainCrypto - INFO - Processing section: Risks and Opportunities
2025-03-22 23:40:10,179 - XplainCrypto - INFO - Section mapping: Risks and Opportunities -> risks_and_opportunities
2025-03-22 23:40:10,179 - XplainCrypto - INFO - Found content in state.risks_and_opportunities: **Risks and Opportunities Analysis for SUI Cryptoc...
2025-03-22 23:40:10,179 - XplainCrypto - INFO - Added content for Risks and Opportunities from state.risks_and_opportunities
2025-03-22 23:40:10,179 - XplainCrypto - INFO - Processing 2 visualizations for section Risks and Opportunities
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Found 10 files matching risks_table visualization pattern
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Adding visualization from docs/sui/risks_table_20250322_233907.png
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Successfully added visualization risks_table_20250322_233907.png to section Risks and Opportunities
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Found 10 files matching opportunities_table visualization pattern
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Adding visualization from docs/sui/opportunities_table_20250322_233907.png
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Successfully added visualization opportunities_table_20250322_233907.png to section Risks and Opportunities
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Processing section: Team and Development
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Section mapping: Team and Development -> team_and_development
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Found content in state.team_and_development: ### Team and Development

**Key Team Members**  
T...
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Added content for Team and Development from state.team_and_development
2025-03-22 23:40:10,180 - XplainCrypto - INFO - Processing 1 visualizations for section Team and Development
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Found 10 files matching roadmap_timeline visualization pattern
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Adding visualization from docs/sui/roadmap_timeline_20250322_233907.png
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Successfully added visualization roadmap_timeline_20250322_233907.png to section Team and Development
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Processing section: Conclusion
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Section mapping: Conclusion -> conclusion
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Found content in state.conclusion: In conclusion, SUI cryptocurrency presents a compe...
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Added content for Conclusion from state.conclusion
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Processing 1 visualizations for section Conclusion
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Found 10 files matching key_takeaways_table visualization pattern
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Adding visualization from docs/sui/key_takeaways_table_20250322_233907.png
2025-03-22 23:40:10,181 - XplainCrypto - INFO - Successfully added visualization key_takeaways_table_20250322_233907.png to section Conclusion
2025-03-22 23:40:10,185 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:10,185 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:10,185 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:10,185 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:10,307 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:10,307 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:10,307 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:10,307 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:10,413 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:10,413 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:10,413 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:10,413 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:10,665 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:10,665 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:10,665 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:10,665 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:10,889 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:10,889 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:10,889 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:10,889 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:11,140 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:11,140 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:11,140 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:11,140 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:11,337 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:11,337 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:11,337 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:11,337 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:11,548 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:11,548 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:11,549 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:11,549 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:11,665 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:11,665 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:11,665 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:11,665 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:11,780 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:11,780 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:11,780 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:11,780 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:11,894 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:11,894 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:11,894 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:11,894 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:12,025 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:12,026 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:12,026 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:12,026 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:12,141 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:12,141 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:12,141 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:12,141 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:12,389 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:40:12,389 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:40:12,389 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:40:12,389 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:40:12,569 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:40:12,571 - socketio - INFO - emitting event "progress" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,571 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,571 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,571 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,571 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,572 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,573 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,574 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,575 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,576 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,577 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,578 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,579 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:40:12,579 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (2463606 bytes)
2025-03-22 23:40:12,579 - socketio - INFO - emitting event "data" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,582 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,582 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:40:12,582 - XplainCrypto - INFO - Report generation completed in 66.08s with 0 errors
2025-03-22 23:40:12,582 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:40:12,582 - socketio - INFO - emitting event "log_update" to JdNd2FfryymmF6xuAAAB [/]
2025-03-22 23:48:54,047 - socketio - DEBUG - Client disconnected: JdNd2FfryymmF6xuAAAB
2025-03-22 23:48:55,799 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:48:55,855 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:48:55,862 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:48:55,867 - socketio - DEBUG - Client connected: bX1uJwoIGgOhzSrtAAAB
2025-03-22 23:48:57,614 - socketio - DEBUG - Client disconnected: bX1uJwoIGgOhzSrtAAAB
2025-03-22 23:48:58,881 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:48:58,920 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:48:58,926 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:48:58,931 - socketio - DEBUG - Client connected: LtXXHajyZDPcptj5AAAB
2025-03-22 23:49:16,414 - socketio - DEBUG - Client disconnected: LtXXHajyZDPcptj5AAAB
2025-03-22 23:49:18,065 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:49:18,093 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:49:18,098 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:49:18,103 - socketio - DEBUG - Client connected: ne5JdJrZP2dsJRo7AAAB
2025-03-22 23:50:09,443 - socketio - DEBUG - Client disconnected: ne5JdJrZP2dsJRo7AAAB
2025-03-22 23:50:11,159 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:50:11,189 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:50:11,193 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:50:11,197 - socketio - DEBUG - Client connected: lOsS2NdGVjz-3KfXAAAB
2025-03-22 23:51:28,409 - socketio - DEBUG - Client disconnected: lOsS2NdGVjz-3KfXAAAB
2025-03-22 23:51:30,104 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:51:30,132 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:51:30,136 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:51:30,142 - socketio - DEBUG - Client connected: kRIV_5oV03zE2NYqAAAB
2025-03-22 23:51:38,627 - socketio - DEBUG - Client disconnected: kRIV_5oV03zE2NYqAAAB
2025-03-22 23:51:40,017 - XplainCrypto - INFO - Loaded OPENAI_API_KEY: sk-proj-0C... (truncated for security)
2025-03-22 23:51:40,045 - XplainCrypto - INFO - Initialized cache directory
2025-03-22 23:51:40,049 - XplainCrypto - INFO - Main module loaded successfully
2025-03-22 23:51:40,054 - socketio - DEBUG - Client connected: YajpmKJegEM_vVPeAAAB
2025-03-22 23:51:46,018 - socketio - INFO - received event "message" from YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,019 - XplainCrypto - INFO - Starting report generation for SUI (fast_mode: True)
2025-03-22 23:51:46,019 - XplainCrypto - INFO - Successfully loaded report configuration from file
2025-03-22 23:51:46,020 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,020 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,021 - XplainCrypto - INFO - Progress: Starting research... | Step: configuration, 100%
2025-03-22 23:51:46,021 - XplainCrypto - INFO - Using fast mode settings with optimized token usage
2025-03-22 23:51:46,039 - XplainCrypto - INFO - Starting research for SUI
2025-03-22 23:51:46,040 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,040 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,040 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,040 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,040 - XplainCrypto - INFO - Progress: Researching SUI... | Step: research, 0%
2025-03-22 23:51:46,040 - XplainCrypto - INFO - Starting enhanced research for SUI
2025-03-22 23:51:46,041 - XplainCrypto - INFO - Found cached research for SUI
2025-03-22 23:51:46,041 - XplainCrypto - INFO - Using cached research for SUI (less than 24h old)
2025-03-22 23:51:46,041 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - XplainCrypto - INFO - Progress: Loaded cached research for SUI | Step: research, 100%
2025-03-22 23:51:46,042 - XplainCrypto - INFO - Generating visualizations for SUI
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,042 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Progress: Creating visualizations based on report configuration... | Step: visualization, 0%
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Visualization agent processing for SUI
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Running visualization agent in fast mode
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Using report configuration to generate visualizations
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Visualization output directory created/verified: docs/sui
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Generating visualizations directly from report configuration
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Need to generate 14 unique visualization types
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Generating opportunities_table visualization with web_research data
2025-03-22 23:51:46,043 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:51:46,043 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:51:46,044 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,044 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:51:46,044 - XplainCrypto - INFO - Generating visualization: opportunities_table
2025-03-22 23:51:46,044 - XplainCrypto - INFO - Generating table for opportunities_table with fields: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:51:46,044 - XplainCrypto - INFO - Using items list data for table opportunities_table with 3 rows
2025-03-22 23:51:46,044 - XplainCrypto - WARNING - No valid data found for table opportunities_table, creating sample data
2025-03-22 23:51:46,044 - XplainCrypto - INFO - Creating table with columns: opportunity_type, opportunity_description, potential_impact
2025-03-22 23:51:46,048 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,049 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,050 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,051 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,052 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,053 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,054 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:51:46,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,055 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,056 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,057 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,058 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:51:46,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,059 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,060 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,061 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:51:46,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,062 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,063 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,064 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,065 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,066 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,068 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,069 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,070 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,071 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,072 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:51:46,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,073 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,074 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,075 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,076 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,077 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:51:46,078 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,079 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,080 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,081 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:51:46,090 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,092 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,093 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,094 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,095 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,096 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,097 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,098 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgian.ttf', name='.SF Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,099 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,100 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/CJKSymbolsFallback.ttc', name='.CJK Symbols Fallback HK', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:51:46,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,101 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.otf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,102 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,103 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ADTNumeric.ttc', name='.SF Soft Numeric', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,104 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,105 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,106 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,107 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFGeorgianRounded.ttf', name='.SF Georgian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,108 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenianRounded.ttf', name='.SF Armenian Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,109 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,110 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,111 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,112 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.otf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrew.ttf', name='.SF Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,113 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFArmenian.ttf', name='.SF Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,114 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,115 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,116 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFHebrewRounded.ttf', name='.SF Hebrew Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/SFCamera.ttf', name='.SF Camera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,117 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-03-22 23:51:46,118 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/Users/gkavanagh/Development/xplaincrypto/.venv/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2025-03-22 23:51:46,126 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,133 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,202 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,211 - XplainCrypto - INFO - ✅ Successfully generated opportunities_table visualization
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Visualization file opportunities_table_20250322_235146.png created, size: 88.3 KB
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Generating risks_table visualization with web_research data
2025-03-22 23:51:46,211 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Generating visualization: risks_table
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Generating table for risks_table with fields: risk_type, risk_description, risk_level
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Using items list data for table risks_table with 3 rows
2025-03-22 23:51:46,211 - XplainCrypto - WARNING - No valid data found for table risks_table, creating sample data
2025-03-22 23:51:46,211 - XplainCrypto - INFO - Creating table with columns: risk_type, risk_description, risk_level
2025-03-22 23:51:46,219 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,225 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,231 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,283 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,291 - XplainCrypto - INFO - ✅ Successfully generated risks_table visualization
2025-03-22 23:51:46,291 - XplainCrypto - INFO - Visualization file risks_table_20250322_235146.png created, size: 84.0 KB
2025-03-22 23:51:46,291 - XplainCrypto - INFO - Generating roadmap_timeline visualization with web_research data
2025-03-22 23:51:46,291 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:51:46,291 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:51:46,292 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,292 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:51:46,292 - XplainCrypto - INFO - Generating visualization: roadmap_timeline
2025-03-22 23:51:46,404 - XplainCrypto - INFO - ✅ Successfully generated roadmap_timeline visualization
2025-03-22 23:51:46,404 - XplainCrypto - INFO - Visualization file roadmap_timeline_20250322_235146.png created, size: 111.0 KB
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Generating partnerships_table visualization with web_research data
2025-03-22 23:51:46,405 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Generating visualization: partnerships_table
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Generating table for partnerships_table with fields: partner_name, partnership_type, partnership_date
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Using items list data for table partnerships_table with 3 rows
2025-03-22 23:51:46,405 - XplainCrypto - WARNING - No valid data found for table partnerships_table, creating sample data
2025-03-22 23:51:46,405 - XplainCrypto - INFO - Creating table with columns: partner_name, partnership_type, partnership_date
2025-03-22 23:51:46,413 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,418 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,423 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,472 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,478 - XplainCrypto - INFO - ✅ Successfully generated partnerships_table visualization
2025-03-22 23:51:46,478 - XplainCrypto - INFO - Visualization file partnerships_table_20250322_235146.png created, size: 85.3 KB
2025-03-22 23:51:46,478 - XplainCrypto - INFO - Generating token_distribution_chart visualization with web_research data
2025-03-22 23:51:46,479 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:51:46,479 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:51:46,479 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,479 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:51:46,479 - XplainCrypto - INFO - Generating visualization: token_distribution_chart
2025-03-22 23:51:46,615 - XplainCrypto - INFO - ✅ Successfully generated token_distribution_chart visualization
2025-03-22 23:51:46,616 - XplainCrypto - INFO - Visualization file token_distribution_chart_20250322_235146.png created, size: 137.6 KB
2025-03-22 23:51:46,616 - XplainCrypto - INFO - Generating price_history_chart visualization with coingecko data
2025-03-22 23:51:46,616 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:51:46,616 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:51:46,616 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,616 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:51:46,616 - XplainCrypto - INFO - Generating visualization: price_history_chart
2025-03-22 23:51:46,779 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/price_history_chart_20250322_235146.png
2025-03-22 23:51:46,779 - XplainCrypto - INFO - ✅ Successfully generated price_history_chart visualization
2025-03-22 23:51:46,779 - XplainCrypto - INFO - Visualization file price_history_chart_20250322_235146.png created, size: 320.3 KB
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Generating key_metrics_table visualization with multi data
2025-03-22 23:51:46,780 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Generating visualization: key_metrics_table
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Generating table for key_metrics_table with fields: current_price, market_cap, 24h_volume, tvl
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Using items list data for table key_metrics_table with 3 rows
2025-03-22 23:51:46,780 - XplainCrypto - WARNING - No valid data found for table key_metrics_table, creating sample data
2025-03-22 23:51:46,780 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:51:46,788 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,792 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,797 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,851 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:46,858 - XplainCrypto - INFO - ✅ Successfully generated key_metrics_table visualization
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Visualization file key_metrics_table_20250322_235146.png created, size: 78.2 KB
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Generating competitor_comparison_chart visualization with multi data
2025-03-22 23:51:46,859 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Generating visualization: competitor_comparison_chart
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Generating bar chart for competitor_comparison_chart with fields: market_cap, price_change_percentage_24h
2025-03-22 23:51:46,859 - XplainCrypto - INFO - Found competitors data with 4 entries
2025-03-22 23:51:47,046 - XplainCrypto - INFO - ✅ Successfully generated competitor_comparison_chart visualization
2025-03-22 23:51:47,046 - XplainCrypto - INFO - Visualization file competitor_comparison_chart_20250322_235146.png created, size: 135.4 KB
2025-03-22 23:51:47,046 - XplainCrypto - INFO - Generating basic_metrics_table visualization with multi data
2025-03-22 23:51:47,046 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:51:47,046 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:47,046 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:51:47,046 - XplainCrypto - INFO - Generating visualization: basic_metrics_table
2025-03-22 23:51:47,047 - XplainCrypto - INFO - Generating table for basic_metrics_table with fields: current_price, market_cap, circulating_supply, total_supply, 24h_volume
2025-03-22 23:51:47,047 - XplainCrypto - INFO - Using items list data for table basic_metrics_table with 3 rows
2025-03-22 23:51:47,047 - XplainCrypto - WARNING - No valid data found for table basic_metrics_table, creating sample data
2025-03-22 23:51:47,047 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:51:47,053 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,057 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,062 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,110 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,116 - XplainCrypto - INFO - ✅ Successfully generated basic_metrics_table visualization
2025-03-22 23:51:47,116 - XplainCrypto - INFO - Visualization file basic_metrics_table_20250322_235147.png created, size: 83.9 KB
2025-03-22 23:51:47,116 - XplainCrypto - INFO - Generating governance_metrics_table visualization with web_research data
2025-03-22 23:51:47,116 - XplainCrypto - WARNING - No real data available for web_research, using SYNTHETIC data
2025-03-22 23:51:47,116 - XplainCrypto - INFO - Generated SYNTHETIC token distribution data for visualization
2025-03-22 23:51:47,116 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:47,116 - XplainCrypto - INFO - Extracted 8 data points for web_research visualization
2025-03-22 23:51:47,117 - XplainCrypto - INFO - Generating visualization: governance_metrics_table
2025-03-22 23:51:47,117 - XplainCrypto - INFO - Generating table for governance_metrics_table with fields: governance_model, proposal_count, voting_participation
2025-03-22 23:51:47,117 - XplainCrypto - INFO - Using items list data for table governance_metrics_table with 3 rows
2025-03-22 23:51:47,117 - XplainCrypto - WARNING - No valid data found for table governance_metrics_table, creating sample data
2025-03-22 23:51:47,117 - XplainCrypto - INFO - Creating table with columns: metric, value
2025-03-22 23:51:47,123 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,127 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,132 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,181 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,187 - XplainCrypto - INFO - ✅ Successfully generated governance_metrics_table visualization
2025-03-22 23:51:47,187 - XplainCrypto - INFO - Visualization file governance_metrics_table_20250322_235147.png created, size: 81.6 KB
2025-03-22 23:51:47,187 - XplainCrypto - INFO - Generating tvl_chart visualization with defillama data
2025-03-22 23:51:47,187 - XplainCrypto - WARNING - No real data available for defillama, using SYNTHETIC data
2025-03-22 23:51:47,188 - XplainCrypto - INFO - Generated SYNTHETIC TVL data for visualization
2025-03-22 23:51:47,188 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:47,188 - XplainCrypto - INFO - Extracted 10 data points for defillama visualization
2025-03-22 23:51:47,188 - XplainCrypto - INFO - Generating visualization: tvl_chart
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/tvl_chart_20250322_235147.png
2025-03-22 23:51:47,347 - XplainCrypto - INFO - ✅ Successfully generated tvl_chart visualization
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Visualization file tvl_chart_20250322_235147.png created, size: 347.1 KB
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Generating key_takeaways_table visualization with generated data
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Using generated data as requested
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Using 1 real data points for generated visualization
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Extracted 8 data points for generated visualization
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Generating visualization: key_takeaways_table
2025-03-22 23:51:47,347 - XplainCrypto - INFO - Generating table for key_takeaways_table with fields: aspect, assessment, recommendation
2025-03-22 23:51:47,347 - XplainCrypto - WARNING - No valid data found for table key_takeaways_table, creating sample data
2025-03-22 23:51:47,348 - XplainCrypto - INFO - Creating table with columns: aspect, assessment, recommendation
2025-03-22 23:51:47,354 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,359 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,364 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,413 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,422 - XplainCrypto - INFO - ✅ Successfully generated key_takeaways_table visualization
2025-03-22 23:51:47,422 - XplainCrypto - INFO - Visualization file key_takeaways_table_20250322_235147.png created, size: 90.6 KB
2025-03-22 23:51:47,422 - XplainCrypto - INFO - Generating volume_chart visualization with coingecko data
2025-03-22 23:51:47,422 - XplainCrypto - WARNING - No real data available for coingecko, using SYNTHETIC data
2025-03-22 23:51:47,422 - XplainCrypto - INFO - Generated SYNTHETIC price and volume data for visualization
2025-03-22 23:51:47,422 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:47,422 - XplainCrypto - INFO - Extracted 15 data points for coingecko visualization
2025-03-22 23:51:47,422 - XplainCrypto - INFO - Generating visualization: volume_chart
2025-03-22 23:51:47,581 - XplainCrypto - INFO - Successfully saved visualization to docs/sui/volume_chart_20250322_235147.png
2025-03-22 23:51:47,581 - XplainCrypto - INFO - ✅ Successfully generated volume_chart visualization
2025-03-22 23:51:47,581 - XplainCrypto - INFO - Visualization file volume_chart_20250322_235147.png created, size: 240.2 KB
2025-03-22 23:51:47,581 - XplainCrypto - INFO - Generating supply_table visualization with multi data
2025-03-22 23:51:47,582 - XplainCrypto - WARNING - No real data available for multi, using SYNTHETIC data
2025-03-22 23:51:47,582 - XplainCrypto - INFO - Added comparison data with 4 competitors
2025-03-22 23:51:47,582 - XplainCrypto - INFO - Extracted 8 data points for multi visualization
2025-03-22 23:51:47,582 - XplainCrypto - INFO - Generating visualization: supply_table
2025-03-22 23:51:47,582 - XplainCrypto - INFO - Generating table for supply_table with fields: circulating_supply, total_supply, max_supply
2025-03-22 23:51:47,582 - XplainCrypto - INFO - Using items list data for table supply_table with 3 rows
2025-03-22 23:51:47,582 - XplainCrypto - WARNING - No valid data found for table supply_table, creating sample data
2025-03-22 23:51:47,582 - XplainCrypto - INFO - Creating table with columns: category, value, status
2025-03-22 23:51:47,589 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,593 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,599 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,647 - matplotlib.axes._base - DEBUG - title position was updated manually, not adjusting
2025-03-22 23:51:47,654 - XplainCrypto - INFO - ✅ Successfully generated supply_table visualization
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization file supply_table_20250322_235147.png created, size: 74.9 KB
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Successfully generated 14/14 visualizations
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization opportunities_table: docs/sui/opportunities_table_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization risks_table: docs/sui/risks_table_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization roadmap_timeline: docs/sui/roadmap_timeline_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization partnerships_table: docs/sui/partnerships_table_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization token_distribution_chart: docs/sui/token_distribution_chart_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization price_history_chart: docs/sui/price_history_chart_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization key_metrics_table: docs/sui/key_metrics_table_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization competitor_comparison_chart: docs/sui/competitor_comparison_chart_20250322_235146.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization basic_metrics_table: docs/sui/basic_metrics_table_20250322_235147.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization governance_metrics_table: docs/sui/governance_metrics_table_20250322_235147.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization tvl_chart: docs/sui/tvl_chart_20250322_235147.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization key_takeaways_table: docs/sui/key_takeaways_table_20250322_235147.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization volume_chart: docs/sui/volume_chart_20250322_235147.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Visualization supply_table: docs/sui/supply_table_20250322_235147.png
2025-03-22 23:51:47,654 - XplainCrypto - INFO - Config-driven generation complete: 14/14 visualizations created
2025-03-22 23:51:47,655 - XplainCrypto - INFO - Added 14 visualizations to state
2025-03-22 23:51:47,655 - XplainCrypto - INFO - Successfully generated visualizations, now in state: 14 items
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,655 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,656 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,657 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,658 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,659 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,660 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,661 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,662 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,663 - XplainCrypto - INFO - Progress: Generated visualizations with config-driven approach | Step: visualization, 100%
2025-03-22 23:51:47,663 - XplainCrypto - INFO - Fast mode enabled - Streamlining content generation
2025-03-22 23:51:47,663 - XplainCrypto - INFO - Writing lightweight report for SUI
2025-03-22 23:51:47,663 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,664 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,664 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,664 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:51:47,665 - XplainCrypto - INFO - Progress: Creating report content for SUI... | Step: writing, 0%
2025-03-22 23:51:47,665 - XplainCrypto - INFO - Writing report for SUI
2025-03-22 23:51:47,665 - XplainCrypto - INFO - Using report configuration from state
2025-03-22 23:51:47,665 - XplainCrypto - INFO - Generating section: Executive Summary
2025-03-22 23:51:47,669 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an executive summary for SUI cryptocurrency research report.\n    \n    The summary should be concise (no more than 250 words) and cover:\n    - Key value proposition\n    - Market position\n    - Main strengths\n    - Investment considerations\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Metrics: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:51:47,691 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:51:47,691 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-03-22 23:51:47,716 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11c848850>
2025-03-22 23:51:47,716 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x11814e9f0> server_hostname='api.openai.com' timeout=None
2025-03-22 23:51:47,728 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1187cbf10>
2025-03-22 23:51:47,728 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:51:47,728 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:51:47,728 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:51:47,729 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:51:47,729 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:51:55,171 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:51:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6813'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999700'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_490299edb28882220482a49b788e88d8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=zsQnfs3vq5nzxswWQLEZhk3Cd8fEFILv0ucz8VtwPdI-1742687515-1.0.1.1-hHcLpDBWq6bYPW0h76Wk8s0u9P1cNHYdi75ufyIRQ5D1SMiV3u_xKtm1ZdO4dsOM4vUmHaX4BmRpmnKvTjLgBJSUVgnnodF3eZ1JcjOXwcc; path=/; expires=Sun, 23-Mar-25 00:21:55 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=2Scu7vtk0S238VcfaYQmEIuS.v_HtYM29eH48_ND9CA-1742687515331-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249995c5bd15bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:51:55,172 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:51:55,172 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:51:55,184 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:51:55,185 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:51:55,185 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:51:55,185 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 22 Mar 2025 23:51:55 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-hqwfegpinxiratp36vll894e'), ('openai-processing-ms', '6813'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '4000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '3999700'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '4ms'), ('x-request-id', 'req_490299edb28882220482a49b788e88d8'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=zsQnfs3vq5nzxswWQLEZhk3Cd8fEFILv0ucz8VtwPdI-1742687515-1.0.1.1-hHcLpDBWq6bYPW0h76Wk8s0u9P1cNHYdi75ufyIRQ5D1SMiV3u_xKtm1ZdO4dsOM4vUmHaX4BmRpmnKvTjLgBJSUVgnnodF3eZ1JcjOXwcc; path=/; expires=Sun, 23-Mar-25 00:21:55 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=2Scu7vtk0S238VcfaYQmEIuS.v_HtYM29eH48_ND9CA-1742687515331-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9249995c5bd15bda-LIS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-22 23:51:55,185 - openai._base_client - DEBUG - request_id: req_490299edb28882220482a49b788e88d8
2025-03-22 23:51:55,193 - XplainCrypto - INFO - Generating section: Introduction
2025-03-22 23:51:55,194 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write an introduction for SUI cryptocurrency research report.\n    \n    The introduction should be informative and engaging, establishing the foundation for understanding the project.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Basic Information: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:51:55,195 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:51:55,195 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:51:55,195 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:51:55,195 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:51:55,195 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:51:55,195 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:00,145 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4698'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999740'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_657962797e3bc1ddf97747233bacff37'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9249998afaa15bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:00,145 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:00,145 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:00,152 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:00,152 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:00,152 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:00,152 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4698', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999740', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_657962797e3bc1ddf97747233bacff37', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9249998afaa15bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:00,152 - openai._base_client - DEBUG - request_id: req_657962797e3bc1ddf97747233bacff37
2025-03-22 23:52:00,153 - XplainCrypto - INFO - Generating section: Market Analysis
2025-03-22 23:52:00,155 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Market Analysis section for the SUI cryptocurrency research report.\n    \n    Include these specific components:\n    1. Current price, market cap, trading volume, and historical performance\n    2. Price movements over the last 60 days with percentage changes\n    3. Market trends affecting SUI\n    4. Trading volume analysis and liquidity assessment\n    5. Market sentiment and investor interest\n    6. Comparison with overall cryptocurrency market performance\n    \n    Specific market data to incorporate:\n    Use the research data to find current market metrics.\n    \n    Also include a detailed competitive analysis comparing SUI with Ethereum, Solana, and other major competitors in its sector, focusing on:\n    - Transaction speeds and fees\n    - Market capitalization comparison\n    - Developer activity and ecosystem size\n    - Unique technological advantages\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Price analysis:\n    ### 1. Price Performance and Trends\n60-Day Change: Varies with market conditions\n    \n    This section includes the following visualizations that you should reference in your text:\n- 60-Day Price Trend: \n- 30-Day Trading Volume: \n- Total Value Locked (TVL) Trend: \n- Competitive Comparison: \n\n    \n    Format the response as plain text with clear section headers. Use specific numbers and metrics.\n    The section should be data-rich, informative, and approximately 250 words.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:00,155 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:00,155 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:00,155 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:00,155 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:00,156 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:00,156 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:06,762 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6453'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999497'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_0698aa87b1fe2d7bee7ce546e3b0d73f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924999a9fef95bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:06,763 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:06,764 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:06,765 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:06,765 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:06,765 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:06,765 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6453', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999497', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_0698aa87b1fe2d7bee7ce546e3b0d73f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924999a9fef95bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:06,765 - openai._base_client - DEBUG - request_id: req_0698aa87b1fe2d7bee7ce546e3b0d73f
2025-03-22 23:52:06,766 - XplainCrypto - INFO - Generated enhanced market analysis with 361 words
2025-03-22 23:52:06,766 - XplainCrypto - INFO - Generating section: Technical Analysis
2025-03-22 23:52:06,767 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a technical analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of SUI's technological foundations and potential, using technical terms appropriately but remaining accessible to non-technical readers.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    \n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:06,768 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:06,769 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:06,769 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:06,769 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:06,769 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:06,769 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:12,732 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'5810'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999745'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_94474bd303b9a1e88b83b1a035e47b22'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924999d358585bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:12,733 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:12,733 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:12,737 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:12,737 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:12,738 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:12,738 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '5810', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999745', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_94474bd303b9a1e88b83b1a035e47b22', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924999d358585bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:12,738 - openai._base_client - DEBUG - request_id: req_94474bd303b9a1e88b83b1a035e47b22
2025-03-22 23:52:12,739 - XplainCrypto - INFO - Generating section: Tokenomics
2025-03-22 23:52:12,741 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a tokenomics analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear understanding of the token's economic model and value accrual mechanisms, with specific numbers and percentages where available.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    Tokenomics data:\n    Tokenomics and Supply Metrics\n**Total Supply of SUI Tokens**:  \nThe total supply of SUI tokens has been capped at 10 billion tokens.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Token Distribution: \n- Token Supply Details: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:12,742 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:12,742 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:12,742 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:12,742 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:12,742 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:12,743 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:24,841 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'11946'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999676'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_34507f20a3670781dab574ec43873b70'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'924999f8acfa5bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:24,842 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:24,842 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:24,848 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:24,848 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:24,848 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:24,848 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '11946', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999676', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_34507f20a3670781dab574ec43873b70', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '924999f8acfa5bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:24,849 - openai._base_client - DEBUG - request_id: req_34507f20a3670781dab574ec43873b70
2025-03-22 23:52:24,850 - XplainCrypto - INFO - Generating section: Governance and Community
2025-03-22 23:52:24,852 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Governance and Community section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Governance model details (DAO structure, voting mechanisms, proposal systems)\n    2. Community engagement metrics (social media followers, growth rates, active community members)\n    3. Recent governance decisions and their impacts\n    4. Voting participation percentages\n    5. Community development contributions\n    6. Governance token utility and distribution\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Governance Metrics: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:24,853 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:24,853 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:24,853 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:24,853 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:24,853 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:24,853 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:29,741 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'4730'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999609'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_e856da7cb50d712e13ecbcaaa09afbfd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92499a445e0d5bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:29,741 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:29,741 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:29,751 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:29,751 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:29,751 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:29,752 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '4730', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999609', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_e856da7cb50d712e13ecbcaaa09afbfd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92499a445e0d5bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:29,752 - openai._base_client - DEBUG - request_id: req_e856da7cb50d712e13ecbcaaa09afbfd
2025-03-22 23:52:29,752 - XplainCrypto - INFO - Generated enhanced governance section with 319 words
2025-03-22 23:52:29,752 - XplainCrypto - INFO - Generating section: Ecosystem and Partnerships
2025-03-22 23:52:29,754 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write an ecosystem and partnerships analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear picture of SUI's network effects and strategic position within the broader blockchain landscape.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Partnerships: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:29,755 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:29,755 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:29,755 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:29,755 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:29,755 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:29,755 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:38,990 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'9075'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999727'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_578a6574510b9d38d2b0fbdf66984c41'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92499a62fffe5bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:38,993 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:38,993 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:38,994 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:38,994 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:38,994 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:38,994 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '9075', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999727', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_578a6574510b9d38d2b0fbdf66984c41', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92499a62fffe5bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:38,994 - openai._base_client - DEBUG - request_id: req_578a6574510b9d38d2b0fbdf66984c41
2025-03-22 23:52:38,996 - XplainCrypto - INFO - Generating section: Risks and Opportunities
2025-03-22 23:52:39,001 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a risks and opportunities analysis for SUI cryptocurrency research report.\n    \n    The analysis should provide investors with a clear framework for evaluating SUI's risk-reward profile, being honest about challenges while also recognizing potential upside.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Risks: \n- Key Opportunities: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:39,003 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:39,004 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:39,004 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:39,004 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:39,005 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:39,005 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:46,144 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6945'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999718'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'4ms'), (b'x-request-id', b'req_9c0328d21a50a3473d29440724504f4d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92499a9ccc525bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:46,144 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:46,144 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:46,151 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:46,151 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:46,151 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:46,151 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6945', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999718', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '4ms', 'x-request-id': 'req_9c0328d21a50a3473d29440724504f4d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92499a9ccc525bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:46,151 - openai._base_client - DEBUG - request_id: req_9c0328d21a50a3473d29440724504f4d
2025-03-22 23:52:46,152 - XplainCrypto - INFO - Generating section: Team and Development
2025-03-22 23:52:46,153 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\n    Write a detailed Team and Development section for the SUI cryptocurrency research report.\n    \n    Include these SPECIFIC components:\n    1. Key team members with their backgrounds and relevant experience\n    2. Development team size and expertise\n    3. Detailed project roadmap with specific upcoming milestones and their target dates\n    4. Recent development achievements\n    5. Development activity metrics (GitHub commits, contributors)\n    6. Notable advisors or partnerships that strengthen the development team\n    \n    The section should be informative, data-rich and concise (no more than 250 words).\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Development Roadmap: \n\n    \n    Format the response as plain text paragraphs with clear subheadings. Focus on facts, current data, and objective analysis.\n    Include specific numbers and metrics wherever possible. Do not use vague statements.\n    ', 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:46,153 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:46,153 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:46,154 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:46,154 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:46,154 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:46,154 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:52,350 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'6041'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999605'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_a423f089231fcb61661890a353dd93e8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92499ac97bd15bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:52,350 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:52,350 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:52,353 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:52,353 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:52,353 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:52,353 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '6041', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999605', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_a423f089231fcb61661890a353dd93e8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92499ac97bd15bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:52,353 - openai._base_client - DEBUG - request_id: req_a423f089231fcb61661890a353dd93e8
2025-03-22 23:52:52,354 - XplainCrypto - INFO - Generated enhanced team section with 270 words
2025-03-22 23:52:52,354 - XplainCrypto - INFO - Generating section: Conclusion
2025-03-22 23:52:52,421 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "\n    Write a conclusion for SUI cryptocurrency research report.\n    \n    The conclusion should provide a clear perspective on SUI's potential as an investment while acknowledging uncertainties and maintaining objectivity.\n    \n    Research data:\n    Purpose\n**Primary Objectives of SUI**:  \nSUI is designed as a Layer 1 blockchain optimized for scalability, speed, and user experience. Its primary objectives include facilitating fast and secure transactions, enabling seamless interactions with decentralized applications (dApps), and supporting sophisticated smart contracts. SUI aims to enhance the overall usability of blockchain technology, providing developers with tools for building efficient and powerful applications.\n\ntechnology, providing developers with tools for building efficient and powerful applications.\n    \n    This section includes the following visualizations that you should reference in your text:\n- Key Takeaways: \n\n    \n    Format the response as plain text paragraphs. Focus on facts, current data, and objective analysis.\n    ", 'role': 'user'}], 'model': 'gpt-4o-mini', 'max_completion_tokens': 500, 'stream': False, 'temperature': 0.5}}
2025-03-22 23:52:52,422 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-22 23:52:52,422 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-22 23:52:52,422 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-03-22 23:52:52,422 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-22 23:52:52,422 - httpcore.http11 - DEBUG - send_request_body.complete
2025-03-22 23:52:52,422 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-22 23:52:55,940 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 22 Mar 2025 23:52:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-hqwfegpinxiratp36vll894e'), (b'openai-processing-ms', b'3345'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'5000'), (b'x-ratelimit-limit-tokens', b'4000000'), (b'x-ratelimit-remaining-requests', b'4999'), (b'x-ratelimit-remaining-tokens', b'3999734'), (b'x-ratelimit-reset-requests', b'12ms'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_1f45aecdf25ad75848962ef4225dd1ed'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92499af0a9a45bda-LIS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-22 23:52:55,940 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-22 23:52:55,941 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-22 23:52:55,950 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-03-22 23:52:55,950 - httpcore.http11 - DEBUG - response_closed.started
2025-03-22 23:52:55,950 - httpcore.http11 - DEBUG - response_closed.complete
2025-03-22 23:52:55,950 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 22 Mar 2025 23:52:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-hqwfegpinxiratp36vll894e', 'openai-processing-ms': '3345', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '4000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '3999734', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_1f45aecdf25ad75848962ef4225dd1ed', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92499af0a9a45bda-LIS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-22 23:52:55,950 - openai._base_client - DEBUG - request_id: req_1f45aecdf25ad75848962ef4225dd1ed
2025-03-22 23:52:55,950 - XplainCrypto - INFO - Generated references section with 3 sources
2025-03-22 23:52:55,950 - XplainCrypto - INFO - Successfully wrote draft report for SUI
2025-03-22 23:52:55,950 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,951 - XplainCrypto - INFO - Progress: Completed writing report for SUI | Step: writing, 100%
2025-03-22 23:52:55,951 - XplainCrypto - INFO - Skipping detailed review and edit in fast mode
2025-03-22 23:52:55,952 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:52:55,952 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,952 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,952 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,952 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:55,952 - XplainCrypto - INFO - Progress: Creating PDF based on report configuration... | Step: publishing, 0%
2025-03-22 23:52:55,952 - XplainCrypto - INFO - Publishing report for SUI
2025-03-22 23:52:55,952 - XplainCrypto - INFO - Created project directory: docs/sui
2025-03-22 23:52:55,952 - XplainCrypto - INFO - Using report configuration from state for document structure
2025-03-22 23:52:55,953 - XplainCrypto - INFO - Attempting to fetch current market data for SUI
2025-03-22 23:52:55,953 - XplainCrypto - INFO - Fetching data for SUI (using CoinGecko ID: sui)
2025-03-22 23:52:55,967 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.coingecko.com:443
2025-03-22 23:52:56,358 - urllib3.connectionpool - DEBUG - https://api.coingecko.com:443 "GET /api/v3/coins/sui HTTP/1.1" 200 None
2025-03-22 23:52:56,361 - XplainCrypto - INFO - Successfully fetched data for SUI: price=$2.26, market cap=$7157920426
2025-03-22 23:52:56,361 - XplainCrypto - INFO - Successfully fetched market data for SUI
2025-03-22 23:52:56,361 - XplainCrypto - INFO - Enhanced price_analysis with real-time data
2025-03-22 23:52:56,361 - XplainCrypto - INFO - Fetching competitor data for comparison with ['ETH', 'SOL', 'AVAX']
2025-03-22 23:52:56,361 - XplainCrypto - INFO - Fetching data for SUI (using CoinGecko ID: sui)
2025-03-22 23:52:56,362 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.coingecko.com:443
2025-03-22 23:52:56,493 - urllib3.connectionpool - DEBUG - https://api.coingecko.com:443 "GET /api/v3/coins/sui HTTP/1.1" 200 None
2025-03-22 23:52:56,496 - XplainCrypto - INFO - Successfully fetched data for SUI: price=$2.26, market cap=$7157920426
2025-03-22 23:52:56,496 - XplainCrypto - INFO - Fetching data for ETH (using CoinGecko ID: ethereum)
2025-03-22 23:52:56,498 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.coingecko.com:443
2025-03-22 23:52:56,740 - urllib3.connectionpool - DEBUG - https://api.coingecko.com:443 "GET /api/v3/coins/ethereum HTTP/1.1" 200 None
2025-03-22 23:52:56,741 - XplainCrypto - INFO - Successfully fetched data for ETH: price=$1979.21, market cap=$238433093147
2025-03-22 23:52:56,742 - XplainCrypto - INFO - Fetching data for SOL (using CoinGecko ID: solana)
2025-03-22 23:52:56,743 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.coingecko.com:443
2025-03-22 23:52:57,000 - urllib3.connectionpool - DEBUG - https://api.coingecko.com:443 "GET /api/v3/coins/solana HTTP/1.1" 200 None
2025-03-22 23:52:57,002 - XplainCrypto - INFO - Successfully fetched data for SOL: price=$128.36, market cap=$65465037859
2025-03-22 23:52:57,002 - XplainCrypto - INFO - Fetching data for AVAX (using CoinGecko ID: avalanche-2)
2025-03-22 23:52:57,004 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): api.coingecko.com:443
2025-03-22 23:52:57,237 - urllib3.connectionpool - DEBUG - https://api.coingecko.com:443 "GET /api/v3/coins/avalanche-2 HTTP/1.1" 200 None
2025-03-22 23:52:57,238 - XplainCrypto - INFO - Successfully fetched data for AVAX: price=$19.39, market cap=$8032622445
2025-03-22 23:52:57,238 - XplainCrypto - INFO - Successfully created competitor comparison with 4 cryptocurrencies
2025-03-22 23:52:57,238 - XplainCrypto - WARNING - Created default references
2025-03-22 23:52:57,238 - XplainCrypto - INFO - Created enhanced governance_and_community section
2025-03-22 23:52:57,238 - XplainCrypto - INFO - Created enhanced team_and_development section
2025-03-22 23:52:57,239 - XplainCrypto - INFO - State has the following attributes for content:
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - draft: # SUI Research Report
*Generated on 2025-03-22 23:...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - governance: governance roles incentivize users to hold and use...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - governance_and_community: Governance and Community Structure

The SUI networ...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - price_analysis: Current Price: $2.2600
Market Cap: $7.16 billion
2...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - progress: Publishing report for SUI......
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - project_name: SUI...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - research_summary: Purpose
**Primary Objectives of SUI**:  
SUI is de...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - team_and_development: Team and Development Roadmap

The SUI project is l...
2025-03-22 23:52:57,239 - XplainCrypto - INFO -   - tokenomics: Tokenomics and Supply Metrics
**Total Supply of SU...
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing executive_summary, using default: Concise overview of key investment points and real-time metrics for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing introduction, using default: Background information and basic details about the cryptocurrency for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing market_analysis, using default: In-depth market performance data and comparisons for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing technical_analysis, using default: Evaluation of technical foundations and architecture for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing ecosystem_and_partnerships, using default: Evaluation of project's network and external relationships for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing risks_and_opportunities, using default: Identification of challenges and growth potential for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - WARNING - Missing conclusion, using default: Summary of findings and investment outlook for SUI.
2025-03-22 23:52:57,239 - XplainCrypto - INFO - Using draft for report content: 23482 characters
2025-03-22 23:52:57,239 - XplainCrypto - INFO - Extracted 1701 characters for Executive Summary from draft
2025-03-22 23:52:57,239 - XplainCrypto - INFO - Extracted 1800 characters for Introduction from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 2532 characters for Market Analysis from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 3001 characters for Technical Analysis from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 2686 characters for Tokenomics from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 2305 characters for Governance and Community from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 2745 characters for Ecosystem and Partnerships from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 2779 characters for Risks and Opportunities from draft
2025-03-22 23:52:57,240 - XplainCrypto - INFO - Extracted 2026 characters for Team and Development from draft
2025-03-22 23:52:57,241 - XplainCrypto - INFO - Extracted 195 characters for Conclusion from draft
2025-03-22 23:52:57,245 - XplainCrypto - WARNING - Using built-in Helvetica fonts: Can't open file "assets/fonts/Roboto-Regular.ttf"
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Processing section: Executive Summary
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Section mapping: Executive Summary -> executive_summary
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Found content in state.executive_summary: **Executive Summary: SUI Cryptocurrency Research R...
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Added content for Executive Summary from state.executive_summary
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Processing 1 visualizations for section Executive Summary
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Found 11 files matching key_metrics_table visualization pattern
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Adding visualization from docs/sui/key_metrics_table_20250322_235146.png
2025-03-22 23:52:57,246 - XplainCrypto - INFO - Successfully added visualization key_metrics_table_20250322_235146.png to section Executive Summary
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Processing section: Introduction
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Section mapping: Introduction -> introduction
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Found content in state.introduction: Introduction

In the rapidly evolving landscape of...
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Added content for Introduction from state.introduction
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Processing 1 visualizations for section Introduction
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Found 11 files matching basic_metrics_table visualization pattern
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Adding visualization from docs/sui/basic_metrics_table_20250322_235147.png
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Successfully added visualization basic_metrics_table_20250322_235147.png to section Introduction
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Processing section: Market Analysis
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Section mapping: Market Analysis -> market_analysis
2025-03-22 23:52:57,247 - XplainCrypto - INFO - Found content in state.market_analysis: # Market Analysis of SUI Cryptocurrency

### Curre...
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Added content for Market Analysis from state.market_analysis
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Processing 4 visualizations for section Market Analysis
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Found 11 files matching price_history_chart visualization pattern
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Adding visualization from docs/sui/price_history_chart_20250322_235146.png
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Successfully added visualization price_history_chart_20250322_235146.png to section Market Analysis
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Found 11 files matching volume_chart visualization pattern
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Adding visualization from docs/sui/volume_chart_20250322_235147.png
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Successfully added visualization volume_chart_20250322_235147.png to section Market Analysis
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Found 11 files matching tvl_chart visualization pattern
2025-03-22 23:52:57,248 - XplainCrypto - INFO - Adding visualization from docs/sui/tvl_chart_20250322_235147.png
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Successfully added visualization tvl_chart_20250322_235147.png to section Market Analysis
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Found 11 files matching competitor_comparison_chart visualization pattern
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Adding visualization from docs/sui/competitor_comparison_chart_20250322_235146.png
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Successfully added visualization competitor_comparison_chart_20250322_235146.png to section Market Analysis
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Processing section: Technical Analysis
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Section mapping: Technical Analysis -> technical_analysis
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Found content in state.technical_analysis: **Technical Analysis of SUI Cryptocurrency**

SUI ...
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Added content for Technical Analysis from state.technical_analysis
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Processing 0 visualizations for section Technical Analysis
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Processing section: Tokenomics
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Section mapping: Tokenomics -> tokenomics
2025-03-22 23:52:57,249 - XplainCrypto - INFO - Found content in state.tokenomics: ### Tokenomics Analysis of SUI Cryptocurrency

SUI...
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Added content for Tokenomics from state.tokenomics
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Processing 2 visualizations for section Tokenomics
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Found 11 files matching token_distribution_chart visualization pattern
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Adding visualization from docs/sui/token_distribution_chart_20250322_235146.png
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Successfully added visualization token_distribution_chart_20250322_235146.png to section Tokenomics
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Found 11 files matching supply_table visualization pattern
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Adding visualization from docs/sui/supply_table_20250322_235147.png
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Successfully added visualization supply_table_20250322_235147.png to section Tokenomics
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Processing section: Governance and Community
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Section mapping: Governance and Community -> governance_and_community
2025-03-22 23:52:57,250 - XplainCrypto - INFO - Found content in state.governance_and_community: ### Governance Model Details

SUI employs a decent...
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Added content for Governance and Community from state.governance_and_community
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Processing 1 visualizations for section Governance and Community
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Found 11 files matching governance_metrics_table visualization pattern
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Adding visualization from docs/sui/governance_metrics_table_20250322_235147.png
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Successfully added visualization governance_metrics_table_20250322_235147.png to section Governance and Community
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Processing section: Ecosystem and Partnerships
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Section mapping: Ecosystem and Partnerships -> ecosystem_and_partnerships
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Found content in state.ecosystem_and_partnerships: ### Ecosystem and Partnerships Analysis for SUI Cr...
2025-03-22 23:52:57,251 - XplainCrypto - INFO - Added content for Ecosystem and Partnerships from state.ecosystem_and_partnerships
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Processing 1 visualizations for section Ecosystem and Partnerships
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Found 11 files matching partnerships_table visualization pattern
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Adding visualization from docs/sui/partnerships_table_20250322_235146.png
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Successfully added visualization partnerships_table_20250322_235146.png to section Ecosystem and Partnerships
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Processing section: Risks and Opportunities
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Section mapping: Risks and Opportunities -> risks_and_opportunities
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Found content in state.risks_and_opportunities: ### Risks and Opportunities Analysis for SUI Crypt...
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Added content for Risks and Opportunities from state.risks_and_opportunities
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Processing 2 visualizations for section Risks and Opportunities
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Found 11 files matching risks_table visualization pattern
2025-03-22 23:52:57,252 - XplainCrypto - INFO - Adding visualization from docs/sui/risks_table_20250322_235146.png
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Successfully added visualization risks_table_20250322_235146.png to section Risks and Opportunities
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Found 11 files matching opportunities_table visualization pattern
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Adding visualization from docs/sui/opportunities_table_20250322_235146.png
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Successfully added visualization opportunities_table_20250322_235146.png to section Risks and Opportunities
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Processing section: Team and Development
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Section mapping: Team and Development -> team_and_development
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Found content in state.team_and_development: ### Team and Development

**Key Team Members**  
S...
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Added content for Team and Development from state.team_and_development
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Processing 1 visualizations for section Team and Development
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Found 11 files matching roadmap_timeline visualization pattern
2025-03-22 23:52:57,253 - XplainCrypto - INFO - Adding visualization from docs/sui/roadmap_timeline_20250322_235146.png
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Successfully added visualization roadmap_timeline_20250322_235146.png to section Team and Development
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Processing section: Conclusion
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Section mapping: Conclusion -> conclusion
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Found content in state.conclusion: In summary, SUI's strategic position within the bl...
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Added content for Conclusion from state.conclusion
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Processing 1 visualizations for section Conclusion
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Found 11 files matching key_takeaways_table visualization pattern
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Adding visualization from docs/sui/key_takeaways_table_20250322_235147.png
2025-03-22 23:52:57,254 - XplainCrypto - INFO - Successfully added visualization key_takeaways_table_20250322_235147.png to section Conclusion
2025-03-22 23:52:57,258 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:57,258 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:57,258 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:57,258 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:57,373 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:57,373 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:57,373 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:57,373 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:57,483 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:57,483 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:57,483 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:57,483 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:57,693 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:57,693 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:57,693 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:57,693 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:57,879 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:57,879 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:57,879 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:57,879 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,095 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,095 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,095 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,095 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,298 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,298 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,298 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,299 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,522 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,522 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,522 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,523 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,630 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,630 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,630 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,630 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,737 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,738 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,738 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,738 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,845 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,845 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,845 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,845 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:58,949 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:58,949 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:58,949 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:58,949 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:59,055 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:59,055 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:59,056 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:59,056 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:59,274 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-03-22 23:52:59,274 - PIL.PngImagePlugin - DEBUG - STREAM b'tEXt' 41 58
2025-03-22 23:52:59,274 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 111 9
2025-03-22 23:52:59,274 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 132 65536
2025-03-22 23:52:59,425 - XplainCrypto - INFO - Successfully created PDF report at docs/SUI_report.pdf
2025-03-22 23:52:59,426 - socketio - INFO - emitting event "progress" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,426 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,426 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,426 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,426 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,427 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,428 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,429 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,430 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,431 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,432 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,433 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,434 - XplainCrypto - INFO - Progress: Publishing report for SUI... | Step: publishing, 100%
2025-03-22 23:52:59,434 - XplainCrypto - INFO - Successfully created PDF report: docs/SUI_report.pdf (2442075 bytes)
2025-03-22 23:52:59,434 - socketio - INFO - emitting event "data" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,435 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,435 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
2025-03-22 23:52:59,436 - XplainCrypto - INFO - Report generation completed in 73.41s with 0 errors
2025-03-22 23:52:59,436 - XplainCrypto - INFO - Report generation process completed for SUI
2025-03-22 23:52:59,436 - socketio - INFO - emitting event "log_update" to YajpmKJegEM_vVPeAAAB [/]
